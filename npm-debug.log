0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install' ]
2 info using npm@1.2.18
3 info using node@v0.10.15
4 verbose read json /home/michael/capstone/package.json
5 verbose readDependencies using package.json deps
6 verbose install where, deps [ '/home/michael/capstone',
6 verbose install   [ 'requirejs',
6 verbose install     'express',
6 verbose install     'jsftp',
6 verbose install     'forever',
6 verbose install     'bufferedstream',
6 verbose install     'seq',
6 verbose install     'morestreams',
6 verbose install     'memorystream',
6 verbose install     'mysql',
6 verbose install     'weighted' ] ]
7 verbose from cache /home/michael/capstone/package.json
8 info preinstall cs_capstone@0.0.1
9 verbose read json /home/michael/capstone/node_modules/express/package.json
10 verbose read json /home/michael/capstone/node_modules/forever/package.json
11 verbose read json /home/michael/capstone/node_modules/package/package.json
12 verbose read json /home/michael/capstone/node_modules/package.json/package.json
13 verbose read json /home/michael/capstone/node_modules/requirejs/package.json
14 verbose from cache /home/michael/capstone/package.json
15 verbose readDependencies using package.json deps
16 verbose from cache /home/michael/capstone/node_modules/express/package.json
17 verbose read json /home/michael/capstone/node_modules/forever/package.json
18 verbose from cache /home/michael/capstone/node_modules/package/package.json
19 verbose from cache /home/michael/capstone/node_modules/package.json/package.json
20 verbose from cache /home/michael/capstone/node_modules/requirejs/package.json
21 verbose cache add [ 'seq@*', null ]
22 verbose cache add name=undefined spec="seq@*" args=["seq@*",null]
23 verbose parsed url { protocol: null,
23 verbose parsed url   slashes: null,
23 verbose parsed url   auth: null,
23 verbose parsed url   host: null,
23 verbose parsed url   port: null,
23 verbose parsed url   hostname: null,
23 verbose parsed url   hash: null,
23 verbose parsed url   search: null,
23 verbose parsed url   query: null,
23 verbose parsed url   pathname: 'seq@*',
23 verbose parsed url   path: 'seq@*',
23 verbose parsed url   href: 'seq@*' }
24 verbose cache add name="seq" spec="*" args=["seq","*"]
25 verbose parsed url { protocol: null,
25 verbose parsed url   slashes: null,
25 verbose parsed url   auth: null,
25 verbose parsed url   host: null,
25 verbose parsed url   port: null,
25 verbose parsed url   hostname: null,
25 verbose parsed url   hash: null,
25 verbose parsed url   search: null,
25 verbose parsed url   query: null,
25 verbose parsed url   pathname: '*',
25 verbose parsed url   path: '*',
25 verbose parsed url   href: '*' }
26 verbose addNamed [ 'seq', '*' ]
27 verbose addNamed [ null, '*' ]
28 verbose cache add [ 'bufferedstream@*', null ]
29 verbose cache add name=undefined spec="bufferedstream@*" args=["bufferedstream@*",null]
30 verbose parsed url { protocol: null,
30 verbose parsed url   slashes: null,
30 verbose parsed url   auth: null,
30 verbose parsed url   host: null,
30 verbose parsed url   port: null,
30 verbose parsed url   hostname: null,
30 verbose parsed url   hash: null,
30 verbose parsed url   search: null,
30 verbose parsed url   query: null,
30 verbose parsed url   pathname: 'bufferedstream@*',
30 verbose parsed url   path: 'bufferedstream@*',
30 verbose parsed url   href: 'bufferedstream@*' }
31 verbose cache add name="bufferedstream" spec="*" args=["bufferedstream","*"]
32 verbose parsed url { protocol: null,
32 verbose parsed url   slashes: null,
32 verbose parsed url   auth: null,
32 verbose parsed url   host: null,
32 verbose parsed url   port: null,
32 verbose parsed url   hostname: null,
32 verbose parsed url   hash: null,
32 verbose parsed url   search: null,
32 verbose parsed url   query: null,
32 verbose parsed url   pathname: '*',
32 verbose parsed url   path: '*',
32 verbose parsed url   href: '*' }
33 verbose addNamed [ 'bufferedstream', '*' ]
34 verbose addNamed [ null, '*' ]
35 verbose cache add [ 'weighted@*', null ]
36 verbose cache add name=undefined spec="weighted@*" args=["weighted@*",null]
37 verbose parsed url { protocol: null,
37 verbose parsed url   slashes: null,
37 verbose parsed url   auth: null,
37 verbose parsed url   host: null,
37 verbose parsed url   port: null,
37 verbose parsed url   hostname: null,
37 verbose parsed url   hash: null,
37 verbose parsed url   search: null,
37 verbose parsed url   query: null,
37 verbose parsed url   pathname: 'weighted@*',
37 verbose parsed url   path: 'weighted@*',
37 verbose parsed url   href: 'weighted@*' }
38 verbose cache add name="weighted" spec="*" args=["weighted","*"]
39 verbose parsed url { protocol: null,
39 verbose parsed url   slashes: null,
39 verbose parsed url   auth: null,
39 verbose parsed url   host: null,
39 verbose parsed url   port: null,
39 verbose parsed url   hostname: null,
39 verbose parsed url   hash: null,
39 verbose parsed url   search: null,
39 verbose parsed url   query: null,
39 verbose parsed url   pathname: '*',
39 verbose parsed url   path: '*',
39 verbose parsed url   href: '*' }
40 verbose addNamed [ 'weighted', '*' ]
41 verbose addNamed [ null, '*' ]
42 verbose cache add [ 'morestreams@*', null ]
43 verbose cache add name=undefined spec="morestreams@*" args=["morestreams@*",null]
44 verbose parsed url { protocol: null,
44 verbose parsed url   slashes: null,
44 verbose parsed url   auth: null,
44 verbose parsed url   host: null,
44 verbose parsed url   port: null,
44 verbose parsed url   hostname: null,
44 verbose parsed url   hash: null,
44 verbose parsed url   search: null,
44 verbose parsed url   query: null,
44 verbose parsed url   pathname: 'morestreams@*',
44 verbose parsed url   path: 'morestreams@*',
44 verbose parsed url   href: 'morestreams@*' }
45 verbose cache add name="morestreams" spec="*" args=["morestreams","*"]
46 verbose parsed url { protocol: null,
46 verbose parsed url   slashes: null,
46 verbose parsed url   auth: null,
46 verbose parsed url   host: null,
46 verbose parsed url   port: null,
46 verbose parsed url   hostname: null,
46 verbose parsed url   hash: null,
46 verbose parsed url   search: null,
46 verbose parsed url   query: null,
46 verbose parsed url   pathname: '*',
46 verbose parsed url   path: '*',
46 verbose parsed url   href: '*' }
47 verbose addNamed [ 'morestreams', '*' ]
48 verbose addNamed [ null, '*' ]
49 verbose cache add [ 'memorystream@*', null ]
50 verbose cache add name=undefined spec="memorystream@*" args=["memorystream@*",null]
51 verbose parsed url { protocol: null,
51 verbose parsed url   slashes: null,
51 verbose parsed url   auth: null,
51 verbose parsed url   host: null,
51 verbose parsed url   port: null,
51 verbose parsed url   hostname: null,
51 verbose parsed url   hash: null,
51 verbose parsed url   search: null,
51 verbose parsed url   query: null,
51 verbose parsed url   pathname: 'memorystream@*',
51 verbose parsed url   path: 'memorystream@*',
51 verbose parsed url   href: 'memorystream@*' }
52 verbose cache add name="memorystream" spec="*" args=["memorystream","*"]
53 verbose parsed url { protocol: null,
53 verbose parsed url   slashes: null,
53 verbose parsed url   auth: null,
53 verbose parsed url   host: null,
53 verbose parsed url   port: null,
53 verbose parsed url   hostname: null,
53 verbose parsed url   hash: null,
53 verbose parsed url   search: null,
53 verbose parsed url   query: null,
53 verbose parsed url   pathname: '*',
53 verbose parsed url   path: '*',
53 verbose parsed url   href: '*' }
54 verbose addNamed [ 'memorystream', '*' ]
55 verbose addNamed [ null, '*' ]
56 verbose cache add [ 'mysql@*', null ]
57 verbose cache add name=undefined spec="mysql@*" args=["mysql@*",null]
58 verbose parsed url { protocol: null,
58 verbose parsed url   slashes: null,
58 verbose parsed url   auth: null,
58 verbose parsed url   host: null,
58 verbose parsed url   port: null,
58 verbose parsed url   hostname: null,
58 verbose parsed url   hash: null,
58 verbose parsed url   search: null,
58 verbose parsed url   query: null,
58 verbose parsed url   pathname: 'mysql@*',
58 verbose parsed url   path: 'mysql@*',
58 verbose parsed url   href: 'mysql@*' }
59 verbose cache add name="mysql" spec="*" args=["mysql","*"]
60 verbose parsed url { protocol: null,
60 verbose parsed url   slashes: null,
60 verbose parsed url   auth: null,
60 verbose parsed url   host: null,
60 verbose parsed url   port: null,
60 verbose parsed url   hostname: null,
60 verbose parsed url   hash: null,
60 verbose parsed url   search: null,
60 verbose parsed url   query: null,
60 verbose parsed url   pathname: '*',
60 verbose parsed url   path: '*',
60 verbose parsed url   href: '*' }
61 verbose addNamed [ 'mysql', '*' ]
62 verbose addNamed [ null, '*' ]
63 verbose already installed skipping requirejs@2.x /home/michael/capstone
64 verbose already installed skipping express@3.x /home/michael/capstone
65 verbose cache add [ 'jsftp@1.x', null ]
66 verbose cache add name=undefined spec="jsftp@1.x" args=["jsftp@1.x",null]
67 verbose parsed url { protocol: null,
67 verbose parsed url   slashes: null,
67 verbose parsed url   auth: null,
67 verbose parsed url   host: null,
67 verbose parsed url   port: null,
67 verbose parsed url   hostname: null,
67 verbose parsed url   hash: null,
67 verbose parsed url   search: null,
67 verbose parsed url   query: null,
67 verbose parsed url   pathname: 'jsftp@1.x',
67 verbose parsed url   path: 'jsftp@1.x',
67 verbose parsed url   href: 'jsftp@1.x' }
68 verbose cache add name="jsftp" spec="1.x" args=["jsftp","1.x"]
69 verbose parsed url { protocol: null,
69 verbose parsed url   slashes: null,
69 verbose parsed url   auth: null,
69 verbose parsed url   host: null,
69 verbose parsed url   port: null,
69 verbose parsed url   hostname: null,
69 verbose parsed url   hash: null,
69 verbose parsed url   search: null,
69 verbose parsed url   query: null,
69 verbose parsed url   pathname: '1.x',
69 verbose parsed url   path: '1.x',
69 verbose parsed url   href: '1.x' }
70 verbose addNamed [ 'jsftp', '1.x' ]
71 verbose addNamed [ null, '>=1.0.0-0 <2.0.0-0' ]
72 silly lockFile ff7b4e40-seq seq@*
73 verbose lock seq@* /home/michael/.npm/ff7b4e40-seq.lock
74 silly lockFile 798279e2-bufferedstream bufferedstream@*
75 verbose lock bufferedstream@* /home/michael/.npm/798279e2-bufferedstream.lock
76 verbose cache add [ 'forever@0.x', null ]
77 verbose cache add name=undefined spec="forever@0.x" args=["forever@0.x",null]
78 verbose parsed url { protocol: null,
78 verbose parsed url   slashes: null,
78 verbose parsed url   auth: null,
78 verbose parsed url   host: null,
78 verbose parsed url   port: null,
78 verbose parsed url   hostname: null,
78 verbose parsed url   hash: null,
78 verbose parsed url   search: null,
78 verbose parsed url   query: null,
78 verbose parsed url   pathname: 'forever@0.x',
78 verbose parsed url   path: 'forever@0.x',
78 verbose parsed url   href: 'forever@0.x' }
79 verbose cache add name="forever" spec="0.x" args=["forever","0.x"]
80 verbose parsed url { protocol: null,
80 verbose parsed url   slashes: null,
80 verbose parsed url   auth: null,
80 verbose parsed url   host: null,
80 verbose parsed url   port: null,
80 verbose parsed url   hostname: null,
80 verbose parsed url   hash: null,
80 verbose parsed url   search: null,
80 verbose parsed url   query: null,
80 verbose parsed url   pathname: '0.x',
80 verbose parsed url   path: '0.x',
80 verbose parsed url   href: '0.x' }
81 verbose addNamed [ 'forever', '0.x' ]
82 verbose addNamed [ null, '>=0.0.0-0 <1.0.0-0' ]
83 silly lockFile e056cbf5-forever-0-x forever@0.x
84 verbose lock forever@0.x /home/michael/.npm/e056cbf5-forever-0-x.lock
85 silly lockFile 535fd3e7-weighted weighted@*
86 verbose lock weighted@* /home/michael/.npm/535fd3e7-weighted.lock
87 silly lockFile 6956aaf0-morestreams morestreams@*
88 verbose lock morestreams@* /home/michael/.npm/6956aaf0-morestreams.lock
89 silly lockFile 8e271920-memorystream memorystream@*
90 verbose lock memorystream@* /home/michael/.npm/8e271920-memorystream.lock
91 silly lockFile 68913812-mysql mysql@*
92 verbose lock mysql@* /home/michael/.npm/68913812-mysql.lock
93 silly lockFile 0539835c-jsftp-1-x jsftp@1.x
94 verbose lock jsftp@1.x /home/michael/.npm/0539835c-jsftp-1-x.lock
95 silly addNameRange { name: 'seq', range: '*', hasData: false }
96 silly addNameRange { name: 'bufferedstream', range: '*', hasData: false }
97 silly addNameRange { name: 'morestreams', range: '*', hasData: false }
98 silly addNameRange { name: 'forever', range: '>=0.0.0-0 <1.0.0-0', hasData: false }
99 silly addNameRange { name: 'mysql', range: '*', hasData: false }
100 silly addNameRange { name: 'jsftp', range: '>=1.0.0-0 <2.0.0-0', hasData: false }
101 silly addNameRange { name: 'weighted', range: '*', hasData: false }
102 silly addNameRange { name: 'memorystream', range: '*', hasData: false }
103 verbose url raw seq
104 verbose url resolving [ 'https://registry.npmjs.org/', './seq' ]
105 verbose url resolved https://registry.npmjs.org/seq
106 info trying registry request attempt 1 at 11:15:05
107 http GET https://registry.npmjs.org/seq
108 verbose url raw bufferedstream
109 verbose url resolving [ 'https://registry.npmjs.org/', './bufferedstream' ]
110 verbose url resolved https://registry.npmjs.org/bufferedstream
111 info trying registry request attempt 1 at 11:15:05
112 http GET https://registry.npmjs.org/bufferedstream
113 verbose url raw morestreams
114 verbose url resolving [ 'https://registry.npmjs.org/', './morestreams' ]
115 verbose url resolved https://registry.npmjs.org/morestreams
116 info trying registry request attempt 1 at 11:15:05
117 http GET https://registry.npmjs.org/morestreams
118 verbose url raw mysql
119 verbose url resolving [ 'https://registry.npmjs.org/', './mysql' ]
120 verbose url resolved https://registry.npmjs.org/mysql
121 info trying registry request attempt 1 at 11:15:05
122 http GET https://registry.npmjs.org/mysql
123 verbose url raw jsftp
124 verbose url resolving [ 'https://registry.npmjs.org/', './jsftp' ]
125 verbose url resolved https://registry.npmjs.org/jsftp
126 info trying registry request attempt 1 at 11:15:05
127 http GET https://registry.npmjs.org/jsftp
128 verbose url raw weighted
129 verbose url resolving [ 'https://registry.npmjs.org/', './weighted' ]
130 verbose url resolved https://registry.npmjs.org/weighted
131 info trying registry request attempt 1 at 11:15:05
132 http GET https://registry.npmjs.org/weighted
133 verbose url raw memorystream
134 verbose url resolving [ 'https://registry.npmjs.org/', './memorystream' ]
135 verbose url resolved https://registry.npmjs.org/memorystream
136 info trying registry request attempt 1 at 11:15:05
137 http GET https://registry.npmjs.org/memorystream
138 verbose url raw forever
139 verbose url resolving [ 'https://registry.npmjs.org/', './forever' ]
140 verbose url resolved https://registry.npmjs.org/forever
141 info trying registry request attempt 1 at 11:15:05
142 verbose etag "519GNH3QVIYN4K8R3W8GXXO04"
143 http GET https://registry.npmjs.org/forever
144 http 200 https://registry.npmjs.org/morestreams
145 silly registry.get cb [ 200,
145 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
145 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
145 silly registry.get     etag: '"CJI7KWRMVNY49K339Q441LC0T"',
145 silly registry.get     'content-type': 'application/json',
145 silly registry.get     via: '1.1 varnish',
145 silly registry.get     'cache-control': 'max-age=1',
145 silly registry.get     'content-length': '4513',
145 silly registry.get     'accept-ranges': 'bytes',
145 silly registry.get     age: '0',
145 silly registry.get     'x-served-by': 'cache-v41-ASH, cache-lax1433-LAX',
145 silly registry.get     'x-cache': 'MISS, MISS',
145 silly registry.get     'x-cache-hits': '0, 0',
145 silly registry.get     'x-timer': 'S1395944105.424709558,VS0,VS-619,VE-601,VE82',
145 silly registry.get     vary: 'Accept',
145 silly registry.get     'keep-alive': 'timeout=10, max=50',
145 silly registry.get     connection: 'Keep-Alive' } ]
146 silly addNameRange number 2 { name: 'morestreams', range: '*', hasData: true }
147 silly addNameRange versions [ 'morestreams',
147 silly addNameRange   [ '0.0.0', '0.0.1', '0.0.2', '0.1.0', '0.1.1' ] ]
148 verbose addNamed [ 'morestreams', '0.1.1' ]
149 verbose addNamed [ '0.1.1', '0.1.1' ]
150 silly lockFile dfb8face-morestreams-0-1-1 morestreams@0.1.1
151 verbose lock morestreams@0.1.1 /home/michael/.npm/dfb8face-morestreams-0-1-1.lock
152 silly lockFile e3b5486b-orestreams-morestreams-0-1-1-tgz https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz
153 verbose lock https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz /home/michael/.npm/e3b5486b-orestreams-morestreams-0-1-1-tgz.lock
154 verbose addRemoteTarball [ 'https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz',
154 verbose addRemoteTarball   '8df21dd117283ebb9d69689c6fe7bc29027c01f2' ]
155 info retry fetch attempt 1 at 11:15:05
156 verbose fetch to= /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
157 http GET https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz
158 http 200 https://registry.npmjs.org/seq
159 silly registry.get cb [ 200,
159 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
159 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
159 silly registry.get     etag: '"3TJO3INZXNZ6I2UKCC6S8RPQC"',
159 silly registry.get     'content-type': 'application/json',
159 silly registry.get     via: '1.1 varnish',
159 silly registry.get     'cache-control': 'max-age=1',
159 silly registry.get     'content-length': '25006',
159 silly registry.get     'accept-ranges': 'bytes',
159 silly registry.get     age: '1630',
159 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1420-LAX',
159 silly registry.get     'x-cache': 'MISS, MISS',
159 silly registry.get     'x-cache-hits': '0, 0',
159 silly registry.get     'x-timer': 'S1395911768.197281122,VS0,VS-784,VE-618,VE32337336',
159 silly registry.get     vary: 'Accept',
159 silly registry.get     'keep-alive': 'timeout=10, max=50',
159 silly registry.get     connection: 'Keep-Alive' } ]
160 silly addNameRange number 2 { name: 'seq', range: '*', hasData: true }
161 silly addNameRange versions [ 'seq',
161 silly addNameRange   [ '0.0.1',
161 silly addNameRange     '0.0.2',
161 silly addNameRange     '0.0.3',
161 silly addNameRange     '0.0.4',
161 silly addNameRange     '0.0.6',
161 silly addNameRange     '0.0.7',
161 silly addNameRange     '0.0.8',
161 silly addNameRange     '0.0.9',
161 silly addNameRange     '0.0.10',
161 silly addNameRange     '0.0.11',
161 silly addNameRange     '0.0.12',
161 silly addNameRange     '0.0.13',
161 silly addNameRange     '0.1.0',
161 silly addNameRange     '0.1.1',
161 silly addNameRange     '0.1.2',
161 silly addNameRange     '0.1.3',
161 silly addNameRange     '0.1.4',
161 silly addNameRange     '0.1.5',
161 silly addNameRange     '0.1.6',
161 silly addNameRange     '0.1.7',
161 silly addNameRange     '0.1.8',
161 silly addNameRange     '0.2.0',
161 silly addNameRange     '0.2.1',
161 silly addNameRange     '0.2.2',
161 silly addNameRange     '0.2.3',
161 silly addNameRange     '0.2.4',
161 silly addNameRange     '0.2.5',
161 silly addNameRange     '0.3.0',
161 silly addNameRange     '0.3.1',
161 silly addNameRange     '0.3.2',
161 silly addNameRange     '0.3.3',
161 silly addNameRange     '0.3.5' ] ]
162 verbose addNamed [ 'seq', '0.3.5' ]
163 verbose addNamed [ '0.3.5', '0.3.5' ]
164 silly lockFile d19d7856-seq-0-3-5 seq@0.3.5
165 verbose lock seq@0.3.5 /home/michael/.npm/d19d7856-seq-0-3-5.lock
166 silly lockFile cd56d80e-stry-npmjs-org-seq-seq-0-3-5-tgz https://registry.npmjs.org/seq/-/seq-0.3.5.tgz
167 verbose lock https://registry.npmjs.org/seq/-/seq-0.3.5.tgz /home/michael/.npm/cd56d80e-stry-npmjs-org-seq-seq-0-3-5-tgz.lock
168 verbose addRemoteTarball [ 'https://registry.npmjs.org/seq/-/seq-0.3.5.tgz',
168 verbose addRemoteTarball   'ae02af3a424793d8ccbf212d69174e0c54dffe38' ]
169 info retry fetch attempt 1 at 11:15:06
170 verbose fetch to= /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
171 http GET https://registry.npmjs.org/seq/-/seq-0.3.5.tgz
172 http 200 https://registry.npmjs.org/weighted
173 silly registry.get cb [ 200,
173 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
173 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
173 silly registry.get     etag: '"20OMMLYHP5XU8TM50TO0SEH44"',
173 silly registry.get     'content-type': 'application/json',
173 silly registry.get     via: '1.1 varnish',
173 silly registry.get     'cache-control': 'max-age=1',
173 silly registry.get     'content-length': '20496',
173 silly registry.get     'accept-ranges': 'bytes',
173 silly registry.get     age: '720',
173 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1433-LAX',
173 silly registry.get     'x-cache': 'MISS, MISS',
173 silly registry.get     'x-cache-hits': '0, 0',
173 silly registry.get     'x-timer': 'S1395943385.389397383,VS0,VS-805,VE-621,VE720383',
173 silly registry.get     vary: 'Accept',
173 silly registry.get     'keep-alive': 'timeout=10, max=49',
173 silly registry.get     connection: 'Keep-Alive' } ]
174 silly addNameRange number 2 { name: 'weighted', range: '*', hasData: true }
175 silly addNameRange versions [ 'weighted', [ '0.1.0', '0.2.0', '0.2.1', '0.2.2' ] ]
176 verbose addNamed [ 'weighted', '0.2.2' ]
177 verbose addNamed [ '0.2.2', '0.2.2' ]
178 silly lockFile 1712d75a-weighted-0-2-2 weighted@0.2.2
179 verbose lock weighted@0.2.2 /home/michael/.npm/1712d75a-weighted-0-2-2.lock
180 silly lockFile 26894af8--org-weighted-weighted-0-2-2-tgz https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz
181 verbose lock https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz /home/michael/.npm/26894af8--org-weighted-weighted-0-2-2-tgz.lock
182 verbose addRemoteTarball [ 'https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz',
182 verbose addRemoteTarball   '954e9a5086823a1f4b9e5406298dd463e2973951' ]
183 info retry fetch attempt 1 at 11:15:06
184 verbose fetch to= /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
185 http GET https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz
186 http 200 https://registry.npmjs.org/memorystream
187 silly registry.get cb [ 200,
187 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:06 GMT',
187 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
187 silly registry.get     etag: '"9MWNFEY5RJG6POC31I9H40WKJ"',
187 silly registry.get     'content-type': 'application/json',
187 silly registry.get     via: '1.1 varnish',
187 silly registry.get     'cache-control': 'max-age=1',
187 silly registry.get     'content-length': '7941',
187 silly registry.get     'accept-ranges': 'bytes',
187 silly registry.get     age: '0',
187 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1420-LAX',
187 silly registry.get     'x-cache': 'MISS, MISS',
187 silly registry.get     'x-cache-hits': '0, 0',
187 silly registry.get     'x-timer': 'S1395944106.570282221,VS0,VS-806,VE-794,VE76',
187 silly registry.get     vary: 'Accept',
187 silly registry.get     'keep-alive': 'timeout=10, max=49',
187 silly registry.get     connection: 'Keep-Alive' } ]
188 silly addNameRange number 2 { name: 'memorystream', range: '*', hasData: true }
189 silly addNameRange versions [ 'memorystream',
189 silly addNameRange   [ '0.0.1',
189 silly addNameRange     '0.0.2',
189 silly addNameRange     '0.0.3',
189 silly addNameRange     '0.0.4',
189 silly addNameRange     '0.0.5',
189 silly addNameRange     '0.1.0',
189 silly addNameRange     '0.1.1',
189 silly addNameRange     '0.2.0' ] ]
190 verbose addNamed [ 'memorystream', '0.2.0' ]
191 verbose addNamed [ '0.2.0', '0.2.0' ]
192 silly lockFile 5b2fd202-memorystream-0-2-0 memorystream@0.2.0
193 verbose lock memorystream@0.2.0 /home/michael/.npm/5b2fd202-memorystream-0-2-0.lock
194 silly lockFile 495ddde1-orystream-memorystream-0-2-0-tgz https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz
195 verbose lock https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz /home/michael/.npm/495ddde1-orystream-memorystream-0-2-0-tgz.lock
196 verbose addRemoteTarball [ 'https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz',
196 verbose addRemoteTarball   '30eb02e87898812d9ad4d4dce82ffd3768e51a2c' ]
197 info retry fetch attempt 1 at 11:15:07
198 verbose fetch to= /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
199 http GET https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz
200 http 200 https://registry.npmjs.org/bufferedstream
201 silly registry.get cb [ 200,
201 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
201 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
201 silly registry.get     etag: '"54L5JVZ9IKO7TZTFS4E5LH8X4"',
201 silly registry.get     'content-type': 'application/json',
201 silly registry.get     via: '1.1 varnish',
201 silly registry.get     'cache-control': 'max-age=1',
201 silly registry.get     'content-length': '39203',
201 silly registry.get     'accept-ranges': 'bytes',
201 silly registry.get     age: '1946',
201 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1423-LAX',
201 silly registry.get     'x-cache': 'MISS, MISS',
201 silly registry.get     'x-cache-hits': '0, 0',
201 silly registry.get     'x-timer': 'S1395942159.415779591,VS0,VS-809,VE-533,VE1946177',
201 silly registry.get     vary: 'Accept',
201 silly registry.get     'keep-alive': 'timeout=10, max=50',
201 silly registry.get     connection: 'Keep-Alive' } ]
202 silly addNameRange number 2 { name: 'bufferedstream', range: '*', hasData: true }
203 silly addNameRange versions [ 'bufferedstream',
203 silly addNameRange   [ '1.0.0',
203 silly addNameRange     '1.0.1',
203 silly addNameRange     '1.0.2',
203 silly addNameRange     '1.1.0',
203 silly addNameRange     '1.2.0',
203 silly addNameRange     '1.3.0',
203 silly addNameRange     '1.4.0',
203 silly addNameRange     '1.4.1',
203 silly addNameRange     '1.5.0',
203 silly addNameRange     '1.5.1',
203 silly addNameRange     '1.6.0' ] ]
204 verbose addNamed [ 'bufferedstream', '1.6.0' ]
205 verbose addNamed [ '1.6.0', '1.6.0' ]
206 silly lockFile 499b3eac-bufferedstream-1-6-0 bufferedstream@1.6.0
207 verbose lock bufferedstream@1.6.0 /home/michael/.npm/499b3eac-bufferedstream-1-6-0.lock
208 silly lockFile a2848cd3-dstream-bufferedstream-1-6-0-tgz https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz
209 verbose lock https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz /home/michael/.npm/a2848cd3-dstream-bufferedstream-1-6-0-tgz.lock
210 verbose addRemoteTarball [ 'https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz',
210 verbose addRemoteTarball   '1b56be67132162d9f468bc886dd2c9160ddf2882' ]
211 info retry fetch attempt 1 at 11:15:07
212 verbose fetch to= /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
213 http GET https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz
214 http 200 https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz
215 silly shasum updated bytes 1788
216 info shasum 8df21dd117283ebb9d69689c6fe7bc29027c01f2
216 info shasum /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
217 verbose tar unpack /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
218 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
219 verbose lock /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package /home/michael/.npm/e82b0153-609-0-027535811299458146-package.lock
220 silly lockFile 3973b282-609-0-027535811299458146-tmp-tgz /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
221 verbose lock /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz /home/michael/.npm/3973b282-609-0-027535811299458146-tmp-tgz.lock
222 silly gunzTarPerm modes [ '755', '644' ]
223 silly gunzTarPerm extractEntry package.json
224 silly gunzTarPerm extractEntry main.js
225 silly gunzTarPerm extractEntry test-upgrade.js
226 silly gunzTarPerm extractEntry tests.js
227 verbose read json /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package/package.json
228 warn package.json morestreams@0.1.1 No README.md file found!
229 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
230 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
231 silly lockFile 3973b282-609-0-027535811299458146-tmp-tgz /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
232 silly lockFile 3973b282-609-0-027535811299458146-tmp-tgz /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/tmp.tgz
233 verbose from cache /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package/package.json
234 verbose tar pack [ '/home/michael/.npm/morestreams/0.1.1/package.tgz',
234 verbose tar pack   '/home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package' ]
235 verbose tarball /home/michael/.npm/morestreams/0.1.1/package.tgz
236 verbose folder /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
237 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
238 verbose lock /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package /home/michael/.npm/e82b0153-609-0-027535811299458146-package.lock
239 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
240 verbose lock /home/michael/.npm/morestreams/0.1.1/package.tgz /home/michael/.npm/52b0e46a-pm-morestreams-0-1-1-package-tgz.lock
241 http 200 https://registry.npmjs.org/seq/-/seq-0.3.5.tgz
242 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
243 silly lockFile e82b0153-609-0-027535811299458146-package /home/michael/tmp/npm-2562/1395944105609-0.027535811299458146/package
244 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
245 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
246 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
247 verbose lock /home/michael/.npm/morestreams/0.1.1/package /home/michael/.npm/fbc99b0d-el-npm-morestreams-0-1-1-package.lock
248 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
249 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
250 verbose tar unpack /home/michael/.npm/morestreams/0.1.1/package.tgz
251 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
252 verbose lock /home/michael/.npm/morestreams/0.1.1/package /home/michael/.npm/fbc99b0d-el-npm-morestreams-0-1-1-package.lock
253 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
254 verbose lock /home/michael/.npm/morestreams/0.1.1/package.tgz /home/michael/.npm/52b0e46a-pm-morestreams-0-1-1-package-tgz.lock
255 silly gunzTarPerm modes [ '755', '644' ]
256 silly gunzTarPerm extractEntry package.json
257 silly gunzTarPerm extractEntry main.js
258 silly gunzTarPerm extractEntry test-upgrade.js
259 silly gunzTarPerm extractEntry tests.js
260 verbose read json /home/michael/.npm/morestreams/0.1.1/package/package.json
261 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
262 silly lockFile fbc99b0d-el-npm-morestreams-0-1-1-package /home/michael/.npm/morestreams/0.1.1/package
263 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
264 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
265 silly shasum updated bytes 1790
266 info shasum 9f990d5cd1c336e92c8c51b884349c33dda509b6
266 info shasum /home/michael/.npm/morestreams/0.1.1/package.tgz
267 verbose from cache /home/michael/.npm/morestreams/0.1.1/package/package.json
268 verbose chmod /home/michael/.npm/morestreams/0.1.1/package.tgz 644
269 verbose chown /home/michael/.npm/morestreams/0.1.1/package.tgz [ 1000, 1000 ]
270 silly lockFile e3b5486b-orestreams-morestreams-0-1-1-tgz https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz
271 silly lockFile e3b5486b-orestreams-morestreams-0-1-1-tgz https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz
272 silly lockFile dfb8face-morestreams-0-1-1 morestreams@0.1.1
273 silly lockFile dfb8face-morestreams-0-1-1 morestreams@0.1.1
274 silly lockFile 6956aaf0-morestreams morestreams@*
275 silly lockFile 6956aaf0-morestreams morestreams@*
276 silly shasum updated bytes 10939
277 info shasum ae02af3a424793d8ccbf212d69174e0c54dffe38
277 info shasum /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
278 verbose tar unpack /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
279 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
280 verbose lock /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package /home/michael/.npm/a1348d16-06555-0-7508000624366105-package.lock
281 silly lockFile b28c5711-06555-0-7508000624366105-tmp-tgz /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
282 verbose lock /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz /home/michael/.npm/b28c5711-06555-0-7508000624366105-tmp-tgz.lock
283 silly gunzTarPerm modes [ '755', '644' ]
284 silly gunzTarPerm extractEntry index.js
285 silly gunzTarPerm extractEntry .npmignore
286 http 200 https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz
287 silly gunzTarPerm extractEntry package.json
288 silly gunzTarPerm extractEntry README.markdown
289 silly gunzTarPerm extractEntry examples/stat_all.coffee
290 silly gunzTarPerm extractEntry examples/join.js
291 silly gunzTarPerm extractEntry examples/parseq.js
292 silly gunzTarPerm extractEntry examples/parseq.coffee
293 silly gunzTarPerm extractEntry examples/stat_all.js
294 silly gunzTarPerm extractEntry test/readdir.js
295 silly gunzTarPerm extractEntry test/seq_.js
296 silly gunzTarPerm extractEntry test/seq.js
297 verbose read json /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package/package.json
298 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
299 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
300 silly lockFile b28c5711-06555-0-7508000624366105-tmp-tgz /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
301 silly lockFile b28c5711-06555-0-7508000624366105-tmp-tgz /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/tmp.tgz
302 verbose from cache /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package/package.json
303 verbose tar pack [ '/home/michael/.npm/seq/0.3.5/package.tgz',
303 verbose tar pack   '/home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package' ]
304 verbose tarball /home/michael/.npm/seq/0.3.5/package.tgz
305 verbose folder /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
306 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
307 verbose lock /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package /home/michael/.npm/a1348d16-06555-0-7508000624366105-package.lock
308 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
309 verbose lock /home/michael/.npm/seq/0.3.5/package.tgz /home/michael/.npm/b2bec23a-ichael-npm-seq-0-3-5-package-tgz.lock
310 silly shasum updated bytes 3258
311 info shasum 954e9a5086823a1f4b9e5406298dd463e2973951
311 info shasum /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
312 verbose tar unpack /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
313 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
314 verbose lock /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package /home/michael/.npm/da0070e0-106888-0-948923640884459-package.lock
315 silly lockFile 51d75066-106888-0-948923640884459-tmp-tgz /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
316 verbose lock /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz /home/michael/.npm/51d75066-106888-0-948923640884459-tmp-tgz.lock
317 silly gunzTarPerm modes [ '755', '644' ]
318 silly gunzTarPerm extractEntry package.json
319 silly gunzTarPerm extractEntry .npmignore
320 silly gunzTarPerm extractEntry README.md
321 silly gunzTarPerm extractEntry index.js
322 silly gunzTarPerm extractEntry LICENSE.md
323 silly gunzTarPerm extractEntry bench/weighted.js
324 silly gunzTarPerm extractEntry lib/weighted.js
325 silly gunzTarPerm extractEntry test/weighted.js
326 verbose read json /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package/package.json
327 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
328 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
329 silly lockFile 51d75066-106888-0-948923640884459-tmp-tgz /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
330 silly lockFile 51d75066-106888-0-948923640884459-tmp-tgz /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/tmp.tgz
331 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
332 silly lockFile a1348d16-06555-0-7508000624366105-package /home/michael/tmp/npm-2562/1395944106555-0.7508000624366105/package
333 verbose from cache /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package/package.json
334 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
335 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
336 verbose tar pack [ '/home/michael/.npm/weighted/0.2.2/package.tgz',
336 verbose tar pack   '/home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package' ]
337 verbose tarball /home/michael/.npm/weighted/0.2.2/package.tgz
338 verbose folder /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
339 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
340 verbose lock /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package /home/michael/.npm/da0070e0-106888-0-948923640884459-package.lock
341 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
342 verbose lock /home/michael/.npm/weighted/0.2.2/package.tgz /home/michael/.npm/a1b9d827-l-npm-weighted-0-2-2-package-tgz.lock
343 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
344 verbose lock /home/michael/.npm/seq/0.3.5/package /home/michael/.npm/b4b4bd95-me-michael-npm-seq-0-3-5-package.lock
345 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
346 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
347 verbose tar unpack /home/michael/.npm/seq/0.3.5/package.tgz
348 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
349 verbose lock /home/michael/.npm/seq/0.3.5/package /home/michael/.npm/b4b4bd95-me-michael-npm-seq-0-3-5-package.lock
350 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
351 verbose lock /home/michael/.npm/seq/0.3.5/package.tgz /home/michael/.npm/b2bec23a-ichael-npm-seq-0-3-5-package-tgz.lock
352 silly gunzTarPerm modes [ '755', '644' ]
353 silly gunzTarPerm extractEntry package.json
354 silly gunzTarPerm extractEntry .npmignore
355 silly gunzTarPerm extractEntry index.js
356 silly gunzTarPerm extractEntry README.markdown
357 silly gunzTarPerm extractEntry examples/join.js
358 silly gunzTarPerm extractEntry examples/parseq.js
359 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
360 silly lockFile da0070e0-106888-0-948923640884459-package /home/michael/tmp/npm-2562/1395944106888-0.948923640884459/package
361 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
362 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
363 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
364 verbose lock /home/michael/.npm/weighted/0.2.2/package /home/michael/.npm/4821d8fc-chael-npm-weighted-0-2-2-package.lock
365 silly gunzTarPerm extractEntry examples/stat_all.js
366 silly gunzTarPerm extractEntry examples/parseq.coffee
367 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
368 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
369 verbose tar unpack /home/michael/.npm/weighted/0.2.2/package.tgz
370 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
371 verbose lock /home/michael/.npm/weighted/0.2.2/package /home/michael/.npm/4821d8fc-chael-npm-weighted-0-2-2-package.lock
372 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
373 verbose lock /home/michael/.npm/weighted/0.2.2/package.tgz /home/michael/.npm/a1b9d827-l-npm-weighted-0-2-2-package-tgz.lock
374 silly gunzTarPerm modes [ '755', '644' ]
375 silly gunzTarPerm extractEntry package.json
376 silly gunzTarPerm extractEntry .npmignore
377 silly gunzTarPerm extractEntry README.md
378 silly gunzTarPerm extractEntry index.js
379 silly gunzTarPerm extractEntry LICENSE.md
380 silly gunzTarPerm extractEntry examples/stat_all.coffee
381 silly gunzTarPerm extractEntry test/readdir.js
382 silly gunzTarPerm extractEntry bench/weighted.js
383 silly gunzTarPerm extractEntry lib/weighted.js
384 silly gunzTarPerm extractEntry test/seq.js
385 silly gunzTarPerm extractEntry test/seq_.js
386 silly gunzTarPerm extractEntry test/weighted.js
387 verbose read json /home/michael/.npm/weighted/0.2.2/package/package.json
388 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
389 silly lockFile 4821d8fc-chael-npm-weighted-0-2-2-package /home/michael/.npm/weighted/0.2.2/package
390 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
391 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
392 silly shasum updated bytes 3254
393 info shasum a548839ca8b48510683b57988086b1a23c4d7de4
393 info shasum /home/michael/.npm/weighted/0.2.2/package.tgz
394 verbose from cache /home/michael/.npm/weighted/0.2.2/package/package.json
395 verbose chmod /home/michael/.npm/weighted/0.2.2/package.tgz 644
396 verbose chown /home/michael/.npm/weighted/0.2.2/package.tgz [ 1000, 1000 ]
397 silly lockFile 26894af8--org-weighted-weighted-0-2-2-tgz https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz
398 silly lockFile 26894af8--org-weighted-weighted-0-2-2-tgz https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz
399 silly lockFile 1712d75a-weighted-0-2-2 weighted@0.2.2
400 silly lockFile 1712d75a-weighted-0-2-2 weighted@0.2.2
401 silly lockFile 535fd3e7-weighted weighted@*
402 silly lockFile 535fd3e7-weighted weighted@*
403 verbose read json /home/michael/.npm/seq/0.3.5/package/package.json
404 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
405 silly lockFile b4b4bd95-me-michael-npm-seq-0-3-5-package /home/michael/.npm/seq/0.3.5/package
406 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
407 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
408 silly shasum updated bytes 10919
409 info shasum 832ca106bdccd4d6ee4e6097d7f02b19ecf46e30
409 info shasum /home/michael/.npm/seq/0.3.5/package.tgz
410 verbose from cache /home/michael/.npm/seq/0.3.5/package/package.json
411 verbose chmod /home/michael/.npm/seq/0.3.5/package.tgz 644
412 verbose chown /home/michael/.npm/seq/0.3.5/package.tgz [ 1000, 1000 ]
413 silly lockFile cd56d80e-stry-npmjs-org-seq-seq-0-3-5-tgz https://registry.npmjs.org/seq/-/seq-0.3.5.tgz
414 silly lockFile cd56d80e-stry-npmjs-org-seq-seq-0-3-5-tgz https://registry.npmjs.org/seq/-/seq-0.3.5.tgz
415 silly lockFile d19d7856-seq-0-3-5 seq@0.3.5
416 silly lockFile d19d7856-seq-0-3-5 seq@0.3.5
417 silly lockFile ff7b4e40-seq seq@*
418 silly lockFile ff7b4e40-seq seq@*
419 http 200 https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz
420 silly shasum updated bytes 4777
421 info shasum 30eb02e87898812d9ad4d4dce82ffd3768e51a2c
421 info shasum /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
422 verbose tar unpack /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
423 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
424 verbose lock /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package /home/michael/.npm/de04e661-07381-0-8417742268647999-package.lock
425 silly lockFile be4e31c7-07381-0-8417742268647999-tmp-tgz /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
426 verbose lock /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz /home/michael/.npm/be4e31c7-07381-0-8417742268647999-tmp-tgz.lock
427 silly gunzTarPerm modes [ '755', '644' ]
428 silly gunzTarPerm extractEntry package.json
429 silly gunzTarPerm extractEntry .npmignore
430 silly gunzTarPerm extractEntry README.md
431 silly gunzTarPerm extractEntry Makefile
432 silly gunzTarPerm extractEntry index.js
433 silly gunzTarPerm extractEntry LICENSE
434 silly gunzTarPerm extractEntry test/memorystream.test.js
435 silly gunzTarPerm extractEntry test/example.js
436 verbose read json /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package/package.json
437 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
438 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
439 silly lockFile be4e31c7-07381-0-8417742268647999-tmp-tgz /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
440 silly lockFile be4e31c7-07381-0-8417742268647999-tmp-tgz /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/tmp.tgz
441 verbose from cache /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package/package.json
442 verbose tar pack [ '/home/michael/.npm/memorystream/0.2.0/package.tgz',
442 verbose tar pack   '/home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package' ]
443 verbose tarball /home/michael/.npm/memorystream/0.2.0/package.tgz
444 verbose folder /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
445 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
446 verbose lock /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package /home/michael/.npm/de04e661-07381-0-8417742268647999-package.lock
447 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
448 verbose lock /home/michael/.npm/memorystream/0.2.0/package.tgz /home/michael/.npm/f868de5a-m-memorystream-0-2-0-package-tgz.lock
449 http 200 https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz
450 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
451 silly lockFile de04e661-07381-0-8417742268647999-package /home/michael/tmp/npm-2562/1395944107381-0.8417742268647999/package
452 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
453 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
454 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
455 verbose lock /home/michael/.npm/memorystream/0.2.0/package /home/michael/.npm/6fe941e5-l-npm-memorystream-0-2-0-package.lock
456 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
457 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
458 verbose tar unpack /home/michael/.npm/memorystream/0.2.0/package.tgz
459 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
460 verbose lock /home/michael/.npm/memorystream/0.2.0/package /home/michael/.npm/6fe941e5-l-npm-memorystream-0-2-0-package.lock
461 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
462 verbose lock /home/michael/.npm/memorystream/0.2.0/package.tgz /home/michael/.npm/f868de5a-m-memorystream-0-2-0-package-tgz.lock
463 silly gunzTarPerm modes [ '755', '644' ]
464 silly gunzTarPerm extractEntry package.json
465 silly gunzTarPerm extractEntry .npmignore
466 silly gunzTarPerm extractEntry README.md
467 silly gunzTarPerm extractEntry LICENSE
468 silly gunzTarPerm extractEntry index.js
469 silly gunzTarPerm extractEntry Makefile
470 silly gunzTarPerm extractEntry test/example.js
471 silly gunzTarPerm extractEntry test/memorystream.test.js
472 verbose read json /home/michael/.npm/memorystream/0.2.0/package/package.json
473 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
474 silly lockFile 6fe941e5-l-npm-memorystream-0-2-0-package /home/michael/.npm/memorystream/0.2.0/package
475 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
476 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
477 silly shasum updated bytes 4736
478 info shasum 4b9ffbab87f462d52c85c9d45867dd92d347a6a6
478 info shasum /home/michael/.npm/memorystream/0.2.0/package.tgz
479 verbose from cache /home/michael/.npm/memorystream/0.2.0/package/package.json
480 verbose chmod /home/michael/.npm/memorystream/0.2.0/package.tgz 644
481 verbose chown /home/michael/.npm/memorystream/0.2.0/package.tgz [ 1000, 1000 ]
482 silly lockFile 495ddde1-orystream-memorystream-0-2-0-tgz https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz
483 silly lockFile 495ddde1-orystream-memorystream-0-2-0-tgz https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz
484 silly lockFile 5b2fd202-memorystream-0-2-0 memorystream@0.2.0
485 silly lockFile 5b2fd202-memorystream-0-2-0 memorystream@0.2.0
486 silly lockFile 8e271920-memorystream memorystream@*
487 silly lockFile 8e271920-memorystream memorystream@*
488 silly shasum updated bytes 5415
489 info shasum 1b56be67132162d9f468bc886dd2c9160ddf2882
489 info shasum /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
490 verbose tar unpack /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
491 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
492 verbose lock /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package /home/michael/.npm/fa2c63f3-468-0-041539802914485335-package.lock
493 silly lockFile c8e5cdc3-468-0-041539802914485335-tmp-tgz /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
494 verbose lock /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz /home/michael/.npm/c8e5cdc3-468-0-041539802914485335-tmp-tgz.lock
495 silly gunzTarPerm modes [ '755', '644' ]
496 silly gunzTarPerm extractEntry package.json
497 silly gunzTarPerm extractEntry .npmignore
498 silly gunzTarPerm extractEntry README.md
499 silly gunzTarPerm extractEntry buffered-stream.js
500 silly gunzTarPerm extractEntry .travis.yml
501 silly gunzTarPerm extractEntry CHANGES
502 silly gunzTarPerm extractEntry test/buffered-stream-test.js
503 silly gunzTarPerm extractEntry test/cpu-test.js
504 verbose read json /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package/package.json
505 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
506 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
507 silly lockFile c8e5cdc3-468-0-041539802914485335-tmp-tgz /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
508 silly lockFile c8e5cdc3-468-0-041539802914485335-tmp-tgz /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/tmp.tgz
509 verbose from cache /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package/package.json
510 verbose tar pack [ '/home/michael/.npm/bufferedstream/1.6.0/package.tgz',
510 verbose tar pack   '/home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package' ]
511 verbose tarball /home/michael/.npm/bufferedstream/1.6.0/package.tgz
512 verbose folder /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
513 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
514 verbose lock /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package /home/michael/.npm/fa2c63f3-468-0-041539802914485335-package.lock
515 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
516 verbose lock /home/michael/.npm/bufferedstream/1.6.0/package.tgz /home/michael/.npm/5e11dab1-bufferedstream-1-6-0-package-tgz.lock
517 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
518 silly lockFile fa2c63f3-468-0-041539802914485335-package /home/michael/tmp/npm-2562/1395944107468-0.041539802914485335/package
519 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
520 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
521 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
522 verbose lock /home/michael/.npm/bufferedstream/1.6.0/package /home/michael/.npm/5aababa5-npm-bufferedstream-1-6-0-package.lock
523 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
524 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
525 verbose tar unpack /home/michael/.npm/bufferedstream/1.6.0/package.tgz
526 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
527 verbose lock /home/michael/.npm/bufferedstream/1.6.0/package /home/michael/.npm/5aababa5-npm-bufferedstream-1-6-0-package.lock
528 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
529 verbose lock /home/michael/.npm/bufferedstream/1.6.0/package.tgz /home/michael/.npm/5e11dab1-bufferedstream-1-6-0-package-tgz.lock
530 silly gunzTarPerm modes [ '755', '644' ]
531 silly gunzTarPerm extractEntry package.json
532 silly gunzTarPerm extractEntry .npmignore
533 silly gunzTarPerm extractEntry README.md
534 silly gunzTarPerm extractEntry buffered-stream.js
535 silly gunzTarPerm extractEntry .travis.yml
536 silly gunzTarPerm extractEntry CHANGES
537 silly gunzTarPerm extractEntry test/buffered-stream-test.js
538 silly gunzTarPerm extractEntry test/cpu-test.js
539 verbose read json /home/michael/.npm/bufferedstream/1.6.0/package/package.json
540 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
541 silly lockFile 5aababa5-npm-bufferedstream-1-6-0-package /home/michael/.npm/bufferedstream/1.6.0/package
542 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
543 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
544 silly shasum updated bytes 5415
545 info shasum 92a06a2c3b6ce405745001eb5b81d0553325c1f8
545 info shasum /home/michael/.npm/bufferedstream/1.6.0/package.tgz
546 verbose from cache /home/michael/.npm/bufferedstream/1.6.0/package/package.json
547 verbose chmod /home/michael/.npm/bufferedstream/1.6.0/package.tgz 644
548 verbose chown /home/michael/.npm/bufferedstream/1.6.0/package.tgz [ 1000, 1000 ]
549 silly lockFile a2848cd3-dstream-bufferedstream-1-6-0-tgz https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz
550 silly lockFile a2848cd3-dstream-bufferedstream-1-6-0-tgz https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz
551 silly lockFile 499b3eac-bufferedstream-1-6-0 bufferedstream@1.6.0
552 silly lockFile 499b3eac-bufferedstream-1-6-0 bufferedstream@1.6.0
553 silly lockFile 798279e2-bufferedstream bufferedstream@*
554 silly lockFile 798279e2-bufferedstream bufferedstream@*
555 http 200 https://registry.npmjs.org/forever
556 silly registry.get cb [ 200,
556 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:07 GMT',
556 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
556 silly registry.get     etag: '"3MC2EQ3BUXCPYFEW8MENX52SA"',
556 silly registry.get     'content-type': 'application/json',
556 silly registry.get     via: '1.1 varnish',
556 silly registry.get     'cache-control': 'max-age=1',
556 silly registry.get     'content-length': '60757',
556 silly registry.get     'accept-ranges': 'bytes',
556 silly registry.get     age: '301',
556 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-lax1433-LAX',
556 silly registry.get     'x-cache': 'MISS, HIT',
556 silly registry.get     'x-cache-hits': '0, 1',
556 silly registry.get     'x-timer': 'S1395876908.801599741,VS0,VS-290,VE-281,VE67198385',
556 silly registry.get     vary: 'Accept',
556 silly registry.get     'keep-alive': 'timeout=10, max=48',
556 silly registry.get     connection: 'Keep-Alive' } ]
557 silly addNameRange number 2 { name: 'forever', range: '>=0.0.0-0 <1.0.0-0', hasData: true }
558 silly addNameRange versions [ 'forever',
558 silly addNameRange   [ '0.6.0',
558 silly addNameRange     '0.6.1',
558 silly addNameRange     '0.6.2',
558 silly addNameRange     '0.6.3',
558 silly addNameRange     '0.6.4',
558 silly addNameRange     '0.6.5',
558 silly addNameRange     '0.6.6',
558 silly addNameRange     '0.6.7',
558 silly addNameRange     '0.6.8',
558 silly addNameRange     '0.6.9',
558 silly addNameRange     '0.7.0',
558 silly addNameRange     '0.7.1',
558 silly addNameRange     '0.7.2',
558 silly addNameRange     '0.7.3',
558 silly addNameRange     '0.7.4',
558 silly addNameRange     '0.7.5',
558 silly addNameRange     '0.8.0',
558 silly addNameRange     '0.8.1',
558 silly addNameRange     '0.8.2',
558 silly addNameRange     '0.8.3',
558 silly addNameRange     '0.8.4',
558 silly addNameRange     '0.8.5',
558 silly addNameRange     '0.9.0',
558 silly addNameRange     '0.9.1',
558 silly addNameRange     '0.9.2',
558 silly addNameRange     '0.10.0',
558 silly addNameRange     '0.10.5',
558 silly addNameRange     '0.10.6',
558 silly addNameRange     '0.10.7',
558 silly addNameRange     '0.10.8',
558 silly addNameRange     '0.10.9',
558 silly addNameRange     '0.10.10',
558 silly addNameRange     '0.10.11' ] ]
559 verbose addNamed [ 'forever', '0.10.11' ]
560 verbose addNamed [ '0.10.11', '0.10.11' ]
561 silly lockFile 298f13d4-forever-0-10-11 forever@0.10.11
562 verbose lock forever@0.10.11 /home/michael/.npm/298f13d4-forever-0-10-11.lock
563 http 200 https://registry.npmjs.org/mysql
564 silly registry.get cb [ 200,
564 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
564 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
564 silly registry.get     etag: '"9TUIL6LSHS48IJZBYUP3UM0NT"',
564 silly registry.get     'content-type': 'application/json',
564 silly registry.get     via: '1.1 varnish',
564 silly registry.get     'cache-control': 'max-age=1',
564 silly registry.get     'content-length': '70426',
564 silly registry.get     'accept-ranges': 'bytes',
564 silly registry.get     age: '1729',
564 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1432-LAX',
564 silly registry.get     'x-cache': 'MISS, HIT',
564 silly registry.get     'x-cache-hits': '0, 1',
564 silly registry.get     'x-timer': 'S1395877530.008725643,VS0,VS-763,VE-476,VE66575764',
564 silly registry.get     vary: 'Accept',
564 silly registry.get     'keep-alive': 'timeout=10, max=50',
564 silly registry.get     connection: 'Keep-Alive' } ]
565 silly addNameRange number 2 { name: 'mysql', range: '*', hasData: true }
566 silly addNameRange versions [ 'mysql',
566 silly addNameRange   [ '0.1.0',
566 silly addNameRange     '0.2.0',
566 silly addNameRange     '0.3.0',
566 silly addNameRange     '0.4.0',
566 silly addNameRange     '0.5.0',
566 silly addNameRange     '0.6.0',
566 silly addNameRange     '0.7.0',
566 silly addNameRange     '0.8.0',
566 silly addNameRange     '0.9.0',
566 silly addNameRange     '0.9.1',
566 silly addNameRange     '0.9.2',
566 silly addNameRange     '0.9.3',
566 silly addNameRange     '0.9.4',
566 silly addNameRange     '0.9.5',
566 silly addNameRange     '0.9.6',
566 silly addNameRange     '2.0.0-alpha',
566 silly addNameRange     '2.0.0-alpha2',
566 silly addNameRange     '2.0.0-alpha3',
566 silly addNameRange     '2.0.0-alpha4',
566 silly addNameRange     '2.0.0-alpha5',
566 silly addNameRange     '2.0.0-alpha6',
566 silly addNameRange     '2.0.0-alpha7',
566 silly addNameRange     '2.0.0-alpha8',
566 silly addNameRange     '2.0.0-alpha9',
566 silly addNameRange     '2.0.0-rc1',
566 silly addNameRange     '2.0.0-rc2',
566 silly addNameRange     '2.0.0',
566 silly addNameRange     '2.0.1',
566 silly addNameRange     '2.1.0',
566 silly addNameRange     '2.1.1' ] ]
567 verbose addNamed [ 'mysql', '2.1.1' ]
568 verbose addNamed [ '2.1.1', '2.1.1' ]
569 silly lockFile df0a7fd5-mysql-2-1-1 mysql@2.1.1
570 verbose lock mysql@2.1.1 /home/michael/.npm/df0a7fd5-mysql-2-1-1.lock
571 silly lockFile 4a8a7076--npmjs-org-mysql-mysql-2-1-1-tgz https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz
572 verbose lock https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz /home/michael/.npm/4a8a7076--npmjs-org-mysql-mysql-2-1-1-tgz.lock
573 verbose addRemoteTarball [ 'https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz',
573 verbose addRemoteTarball   '3ec79b945dee2830fc995515e551a54dceac8383' ]
574 info retry fetch attempt 1 at 11:15:11
575 verbose fetch to= /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
576 http GET https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz
577 verbose read json /home/michael/.npm/forever/0.10.11/package/package.json
578 silly lockFile 298f13d4-forever-0-10-11 forever@0.10.11
579 silly lockFile 298f13d4-forever-0-10-11 forever@0.10.11
580 silly lockFile e056cbf5-forever-0-x forever@0.x
581 silly lockFile e056cbf5-forever-0-x forever@0.x
582 http 200 https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz
583 silly shasum updated bytes 53796
584 info shasum 3ec79b945dee2830fc995515e551a54dceac8383
584 info shasum /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
585 verbose tar unpack /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
586 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
587 verbose lock /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package /home/michael/.npm/e709e14c-11162-0-7087680026888847-package.lock
588 silly lockFile b2fc39e6-11162-0-7087680026888847-tmp-tgz /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
589 verbose lock /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz /home/michael/.npm/b2fc39e6-11162-0-7087680026888847-tmp-tgz.lock
590 silly gunzTarPerm modes [ '755', '644' ]
591 silly gunzTarPerm extractEntry package.json
592 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
593 silly gunzTarPerm extractEntry .npmignore
594 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
595 silly gunzTarPerm extractEntry index.js
596 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
597 silly gunzTarPerm extractEntry fixtures/ssl-profiles.json
598 silly gunzTarPerm modified mode [ 'fixtures/ssl-profiles.json', 438, 420 ]
599 silly gunzTarPerm extractEntry tool/generate-error-constants.js
600 silly gunzTarPerm modified mode [ 'tool/generate-error-constants.js', 438, 420 ]
601 silly gunzTarPerm extractEntry lib/Connection.js
602 silly gunzTarPerm modified mode [ 'lib/Connection.js', 438, 420 ]
603 silly gunzTarPerm extractEntry lib/ConnectionConfig.js
604 silly gunzTarPerm modified mode [ 'lib/ConnectionConfig.js', 438, 420 ]
605 silly gunzTarPerm extractEntry lib/Pool.js
606 silly gunzTarPerm modified mode [ 'lib/Pool.js', 438, 420 ]
607 silly gunzTarPerm extractEntry lib/PoolCluster.js
608 silly gunzTarPerm modified mode [ 'lib/PoolCluster.js', 438, 420 ]
609 silly gunzTarPerm extractEntry lib/PoolConfig.js
610 silly gunzTarPerm modified mode [ 'lib/PoolConfig.js', 438, 420 ]
611 silly gunzTarPerm extractEntry lib/PoolConnection.js
612 silly gunzTarPerm modified mode [ 'lib/PoolConnection.js', 438, 420 ]
613 silly gunzTarPerm extractEntry lib/protocol/Auth.js
614 silly gunzTarPerm modified mode [ 'lib/protocol/Auth.js', 438, 420 ]
615 silly gunzTarPerm extractEntry lib/protocol/PacketHeader.js
616 silly gunzTarPerm modified mode [ 'lib/protocol/PacketHeader.js', 438, 420 ]
617 silly gunzTarPerm extractEntry lib/protocol/PacketWriter.js
618 silly gunzTarPerm modified mode [ 'lib/protocol/PacketWriter.js', 438, 420 ]
619 silly gunzTarPerm extractEntry lib/protocol/Parser.js
620 silly gunzTarPerm modified mode [ 'lib/protocol/Parser.js', 438, 420 ]
621 silly gunzTarPerm extractEntry lib/protocol/Protocol.js
622 silly gunzTarPerm modified mode [ 'lib/protocol/Protocol.js', 438, 420 ]
623 silly gunzTarPerm extractEntry lib/protocol/ResultSet.js
624 silly gunzTarPerm modified mode [ 'lib/protocol/ResultSet.js', 438, 420 ]
625 silly gunzTarPerm extractEntry lib/protocol/SqlString.js
626 silly gunzTarPerm modified mode [ 'lib/protocol/SqlString.js', 438, 420 ]
627 silly gunzTarPerm extractEntry lib/protocol/constants/charsets.js
628 silly gunzTarPerm modified mode [ 'lib/protocol/constants/charsets.js', 438, 420 ]
629 silly gunzTarPerm extractEntry lib/protocol/constants/client.js
630 silly gunzTarPerm modified mode [ 'lib/protocol/constants/client.js', 438, 420 ]
631 silly gunzTarPerm extractEntry lib/protocol/constants/errors.js
632 silly gunzTarPerm modified mode [ 'lib/protocol/constants/errors.js', 438, 420 ]
633 silly gunzTarPerm extractEntry lib/protocol/constants/field_flags.js
634 silly gunzTarPerm modified mode [ 'lib/protocol/constants/field_flags.js', 438, 420 ]
635 silly gunzTarPerm extractEntry lib/protocol/constants/server_status.js
636 silly gunzTarPerm modified mode [ 'lib/protocol/constants/server_status.js', 438, 420 ]
637 silly gunzTarPerm extractEntry lib/protocol/constants/types.js
638 silly gunzTarPerm modified mode [ 'lib/protocol/constants/types.js', 438, 420 ]
639 silly gunzTarPerm extractEntry lib/protocol/packets/ClientAuthenticationPacket.js
640 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ClientAuthenticationPacket.js',
640 silly gunzTarPerm   438,
640 silly gunzTarPerm   420 ]
641 silly gunzTarPerm extractEntry lib/protocol/packets/EofPacket.js
642 silly gunzTarPerm modified mode [ 'lib/protocol/packets/EofPacket.js', 438, 420 ]
643 silly gunzTarPerm extractEntry lib/protocol/packets/ErrorPacket.js
644 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ErrorPacket.js', 438, 420 ]
645 silly gunzTarPerm extractEntry lib/protocol/packets/Field.js
646 silly gunzTarPerm modified mode [ 'lib/protocol/packets/Field.js', 438, 420 ]
647 silly gunzTarPerm extractEntry lib/protocol/packets/EmptyPacket.js
648 silly gunzTarPerm modified mode [ 'lib/protocol/packets/EmptyPacket.js', 438, 420 ]
649 silly gunzTarPerm extractEntry lib/protocol/packets/HandshakeInitializationPacket.js
650 silly gunzTarPerm modified mode [ 'lib/protocol/packets/HandshakeInitializationPacket.js',
650 silly gunzTarPerm   438,
650 silly gunzTarPerm   420 ]
651 silly gunzTarPerm extractEntry lib/protocol/packets/index.js
652 silly gunzTarPerm modified mode [ 'lib/protocol/packets/index.js', 438, 420 ]
653 silly gunzTarPerm extractEntry lib/protocol/packets/LocalDataFilePacket.js
654 silly gunzTarPerm modified mode [ 'lib/protocol/packets/LocalDataFilePacket.js', 438, 420 ]
655 silly gunzTarPerm extractEntry lib/protocol/packets/OkPacket.js
656 silly gunzTarPerm modified mode [ 'lib/protocol/packets/OkPacket.js', 438, 420 ]
657 silly gunzTarPerm extractEntry lib/protocol/packets/OldPasswordPacket.js
658 silly gunzTarPerm modified mode [ 'lib/protocol/packets/OldPasswordPacket.js', 438, 420 ]
659 silly gunzTarPerm extractEntry lib/protocol/packets/ComStatisticsPacket.js
660 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ComStatisticsPacket.js', 438, 420 ]
661 silly gunzTarPerm extractEntry lib/protocol/packets/ResultSetHeaderPacket.js
662 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ResultSetHeaderPacket.js', 438, 420 ]
663 silly gunzTarPerm extractEntry lib/protocol/packets/ComQuitPacket.js
664 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ComQuitPacket.js', 438, 420 ]
665 silly gunzTarPerm extractEntry lib/protocol/packets/RowDataPacket.js
666 silly gunzTarPerm modified mode [ 'lib/protocol/packets/RowDataPacket.js', 438, 420 ]
667 silly gunzTarPerm extractEntry lib/protocol/packets/ComQueryPacket.js
668 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ComQueryPacket.js', 438, 420 ]
669 silly gunzTarPerm extractEntry lib/protocol/packets/SSLRequestPacket.js
670 silly gunzTarPerm modified mode [ 'lib/protocol/packets/SSLRequestPacket.js', 438, 420 ]
671 silly gunzTarPerm extractEntry lib/protocol/packets/ComPingPacket.js
672 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ComPingPacket.js', 438, 420 ]
673 silly gunzTarPerm extractEntry lib/protocol/packets/StatisticsPacket.js
674 silly gunzTarPerm modified mode [ 'lib/protocol/packets/StatisticsPacket.js', 438, 420 ]
675 silly gunzTarPerm extractEntry lib/protocol/packets/ComChangeUserPacket.js
676 silly gunzTarPerm modified mode [ 'lib/protocol/packets/ComChangeUserPacket.js', 438, 420 ]
677 silly gunzTarPerm extractEntry lib/protocol/packets/UseOldPasswordPacket.js
678 silly gunzTarPerm modified mode [ 'lib/protocol/packets/UseOldPasswordPacket.js', 438, 420 ]
679 silly gunzTarPerm extractEntry lib/protocol/packets/FieldPacket.js
680 silly gunzTarPerm modified mode [ 'lib/protocol/packets/FieldPacket.js', 438, 420 ]
681 silly gunzTarPerm extractEntry lib/protocol/sequences/ChangeUser.js
682 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/ChangeUser.js', 438, 420 ]
683 silly gunzTarPerm extractEntry lib/protocol/sequences/Handshake.js
684 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Handshake.js', 438, 420 ]
685 silly gunzTarPerm extractEntry lib/protocol/sequences/index.js
686 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/index.js', 438, 420 ]
687 silly gunzTarPerm extractEntry lib/protocol/sequences/Ping.js
688 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Ping.js', 438, 420 ]
689 silly gunzTarPerm extractEntry lib/protocol/sequences/Query.js
690 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Query.js', 438, 420 ]
691 silly gunzTarPerm extractEntry lib/protocol/sequences/Quit.js
692 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Quit.js', 438, 420 ]
693 silly gunzTarPerm extractEntry lib/protocol/sequences/Sequence.js
694 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Sequence.js', 438, 420 ]
695 silly gunzTarPerm extractEntry lib/protocol/sequences/Statistics.js
696 silly gunzTarPerm modified mode [ 'lib/protocol/sequences/Statistics.js', 438, 420 ]
697 silly gunzTarPerm extractEntry .travis.yml
698 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
699 silly gunzTarPerm extractEntry make.bat
700 silly gunzTarPerm modified mode [ 'make.bat', 438, 420 ]
701 silly gunzTarPerm extractEntry Makefile
702 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
703 silly gunzTarPerm extractEntry Changes.md
704 silly gunzTarPerm modified mode [ 'Changes.md', 438, 420 ]
705 silly gunzTarPerm extractEntry Readme.md
706 silly gunzTarPerm modified mode [ 'Readme.md', 438, 420 ]
707 silly gunzTarPerm extractEntry License
708 silly gunzTarPerm modified mode [ 'License', 438, 420 ]
709 verbose read json /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package/package.json
710 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
711 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
712 silly lockFile b2fc39e6-11162-0-7087680026888847-tmp-tgz /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
713 silly lockFile b2fc39e6-11162-0-7087680026888847-tmp-tgz /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/tmp.tgz
714 verbose from cache /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package/package.json
715 verbose tar pack [ '/home/michael/.npm/mysql/2.1.1/package.tgz',
715 verbose tar pack   '/home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package' ]
716 verbose tarball /home/michael/.npm/mysql/2.1.1/package.tgz
717 verbose folder /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
718 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
719 verbose lock /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package /home/michael/.npm/e709e14c-11162-0-7087680026888847-package.lock
720 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
721 verbose lock /home/michael/.npm/mysql/2.1.1/package.tgz /home/michael/.npm/1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz.lock
722 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
723 silly lockFile e709e14c-11162-0-7087680026888847-package /home/michael/tmp/npm-2562/1395944111162-0.7087680026888847/package
724 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
725 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
726 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
727 verbose lock /home/michael/.npm/mysql/2.1.1/package /home/michael/.npm/6aeff273--michael-npm-mysql-2-1-1-package.lock
728 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
729 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
730 verbose tar unpack /home/michael/.npm/mysql/2.1.1/package.tgz
731 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
732 verbose lock /home/michael/.npm/mysql/2.1.1/package /home/michael/.npm/6aeff273--michael-npm-mysql-2-1-1-package.lock
733 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
734 verbose lock /home/michael/.npm/mysql/2.1.1/package.tgz /home/michael/.npm/1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz.lock
735 silly gunzTarPerm modes [ '755', '644' ]
736 silly gunzTarPerm extractEntry package.json
737 silly gunzTarPerm extractEntry .npmignore
738 silly gunzTarPerm extractEntry index.js
739 silly gunzTarPerm extractEntry License
740 silly gunzTarPerm extractEntry Makefile
741 silly gunzTarPerm extractEntry Readme.md
742 silly gunzTarPerm extractEntry .travis.yml
743 silly gunzTarPerm extractEntry tool/generate-error-constants.js
744 silly gunzTarPerm extractEntry lib/Connection.js
745 silly gunzTarPerm extractEntry lib/ConnectionConfig.js
746 silly gunzTarPerm extractEntry lib/Pool.js
747 silly gunzTarPerm extractEntry lib/PoolCluster.js
748 silly gunzTarPerm extractEntry lib/PoolConfig.js
749 silly gunzTarPerm extractEntry lib/PoolConnection.js
750 silly gunzTarPerm extractEntry lib/protocol/Auth.js
751 silly gunzTarPerm extractEntry lib/protocol/PacketHeader.js
752 silly gunzTarPerm extractEntry lib/protocol/PacketWriter.js
753 silly gunzTarPerm extractEntry lib/protocol/Parser.js
754 silly gunzTarPerm extractEntry lib/protocol/Protocol.js
755 silly gunzTarPerm extractEntry lib/protocol/ResultSet.js
756 silly gunzTarPerm extractEntry lib/protocol/SqlString.js
757 silly gunzTarPerm extractEntry lib/protocol/constants/charsets.js
758 silly gunzTarPerm extractEntry lib/protocol/constants/client.js
759 silly gunzTarPerm extractEntry lib/protocol/constants/errors.js
760 silly gunzTarPerm extractEntry lib/protocol/constants/field_flags.js
761 silly gunzTarPerm extractEntry lib/protocol/constants/server_status.js
762 silly gunzTarPerm extractEntry lib/protocol/constants/types.js
763 silly gunzTarPerm extractEntry lib/protocol/packets/ClientAuthenticationPacket.js
764 silly gunzTarPerm extractEntry lib/protocol/packets/EofPacket.js
765 silly gunzTarPerm extractEntry lib/protocol/packets/ErrorPacket.js
766 silly gunzTarPerm extractEntry lib/protocol/packets/Field.js
767 silly gunzTarPerm extractEntry lib/protocol/packets/EmptyPacket.js
768 silly gunzTarPerm extractEntry lib/protocol/packets/HandshakeInitializationPacket.js
769 silly gunzTarPerm extractEntry lib/protocol/packets/LocalDataFilePacket.js
770 silly gunzTarPerm extractEntry lib/protocol/packets/OkPacket.js
771 silly gunzTarPerm extractEntry lib/protocol/packets/OldPasswordPacket.js
772 silly gunzTarPerm extractEntry lib/protocol/packets/ResultSetHeaderPacket.js
773 silly gunzTarPerm extractEntry lib/protocol/packets/ComStatisticsPacket.js
774 silly gunzTarPerm extractEntry lib/protocol/packets/RowDataPacket.js
775 silly gunzTarPerm extractEntry lib/protocol/packets/ComQuitPacket.js
776 silly gunzTarPerm extractEntry lib/protocol/packets/SSLRequestPacket.js
777 silly gunzTarPerm extractEntry lib/protocol/packets/ComQueryPacket.js
778 silly gunzTarPerm extractEntry lib/protocol/packets/StatisticsPacket.js
779 silly gunzTarPerm extractEntry lib/protocol/packets/ComPingPacket.js
780 silly gunzTarPerm extractEntry lib/protocol/packets/UseOldPasswordPacket.js
781 silly gunzTarPerm extractEntry lib/protocol/packets/ComChangeUserPacket.js
782 silly gunzTarPerm extractEntry lib/protocol/packets/index.js
783 silly gunzTarPerm extractEntry lib/protocol/packets/FieldPacket.js
784 silly gunzTarPerm extractEntry lib/protocol/sequences/ChangeUser.js
785 silly gunzTarPerm extractEntry lib/protocol/sequences/Handshake.js
786 silly gunzTarPerm extractEntry lib/protocol/sequences/Ping.js
787 silly gunzTarPerm extractEntry lib/protocol/sequences/Query.js
788 silly gunzTarPerm extractEntry lib/protocol/sequences/Quit.js
789 silly gunzTarPerm extractEntry lib/protocol/sequences/Sequence.js
790 silly gunzTarPerm extractEntry lib/protocol/sequences/Statistics.js
791 silly gunzTarPerm extractEntry lib/protocol/sequences/index.js
792 silly gunzTarPerm extractEntry make.bat
793 silly gunzTarPerm extractEntry Changes.md
794 silly gunzTarPerm extractEntry fixtures/ssl-profiles.json
795 verbose read json /home/michael/.npm/mysql/2.1.1/package/package.json
796 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
797 silly lockFile 6aeff273--michael-npm-mysql-2-1-1-package /home/michael/.npm/mysql/2.1.1/package
798 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
799 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
800 silly shasum updated bytes 54254
801 info shasum 40e797357175973c4df0395327f34e7d5b491ccd
801 info shasum /home/michael/.npm/mysql/2.1.1/package.tgz
802 verbose from cache /home/michael/.npm/mysql/2.1.1/package/package.json
803 verbose chmod /home/michael/.npm/mysql/2.1.1/package.tgz 644
804 verbose chown /home/michael/.npm/mysql/2.1.1/package.tgz [ 1000, 1000 ]
805 silly lockFile 4a8a7076--npmjs-org-mysql-mysql-2-1-1-tgz https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz
806 silly lockFile 4a8a7076--npmjs-org-mysql-mysql-2-1-1-tgz https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz
807 silly lockFile df0a7fd5-mysql-2-1-1 mysql@2.1.1
808 silly lockFile df0a7fd5-mysql-2-1-1 mysql@2.1.1
809 silly lockFile 68913812-mysql mysql@*
810 silly lockFile 68913812-mysql mysql@*
811 http 200 https://registry.npmjs.org/jsftp
812 silly registry.get cb [ 200,
812 silly registry.get   { date: 'Thu, 27 Mar 2014 18:15:05 GMT',
812 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
812 silly registry.get     etag: '"7VIWCK2Z0LBT9NLT6G4K5AANV"',
812 silly registry.get     'content-type': 'application/json',
812 silly registry.get     via: '1.1 varnish',
812 silly registry.get     'cache-control': 'max-age=1',
812 silly registry.get     'content-length': '351059',
812 silly registry.get     'accept-ranges': 'bytes',
812 silly registry.get     age: '425',
812 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lax1435-LAX',
812 silly registry.get     'x-cache': 'MISS, MISS',
812 silly registry.get     'x-cache-hits': '0, 0',
812 silly registry.get     'x-timer': 'S1395943229.112454891,VS0,VS-805,VE-127,VE876484',
812 silly registry.get     vary: 'Accept',
812 silly registry.get     'keep-alive': 'timeout=10, max=50',
812 silly registry.get     connection: 'Keep-Alive' } ]
813 silly addNameRange number 2 { name: 'jsftp', range: '>=1.0.0-0 <2.0.0-0', hasData: true }
814 silly addNameRange versions [ 'jsftp',
814 silly addNameRange   [ '0.0.1',
814 silly addNameRange     '0.0.2',
814 silly addNameRange     '0.0.3',
814 silly addNameRange     '0.0.4',
814 silly addNameRange     '0.0.5',
814 silly addNameRange     '0.0.6',
814 silly addNameRange     '0.0.7',
814 silly addNameRange     '0.0.8',
814 silly addNameRange     '0.0.9',
814 silly addNameRange     '0.1.0',
814 silly addNameRange     '0.1.1',
814 silly addNameRange     '0.1.2',
814 silly addNameRange     '0.1.3',
814 silly addNameRange     '0.1.4',
814 silly addNameRange     '0.1.5',
814 silly addNameRange     '0.1.6',
814 silly addNameRange     '0.2.0',
814 silly addNameRange     '0.2.1',
814 silly addNameRange     '0.2.2',
814 silly addNameRange     '0.2.5',
814 silly addNameRange     '0.2.6',
814 silly addNameRange     '0.2.7',
814 silly addNameRange     '0.2.8',
814 silly addNameRange     '0.2.9',
814 silly addNameRange     '0.3.0',
814 silly addNameRange     '0.3.1',
814 silly addNameRange     '0.3.2',
814 silly addNameRange     '0.3.3',
814 silly addNameRange     '0.3.4',
814 silly addNameRange     '0.3.5',
814 silly addNameRange     '0.3.6',
814 silly addNameRange     '0.3.7',
814 silly addNameRange     '0.3.8',
814 silly addNameRange     '0.3.9',
814 silly addNameRange     '0.4.0',
814 silly addNameRange     '0.4.1',
814 silly addNameRange     '0.4.2',
814 silly addNameRange     '0.4.3',
814 silly addNameRange     '0.4.4',
814 silly addNameRange     '0.4.5',
814 silly addNameRange     '0.4.6',
814 silly addNameRange     '0.4.7',
814 silly addNameRange     '0.4.8',
814 silly addNameRange     '0.4.9',
814 silly addNameRange     '0.5.0',
814 silly addNameRange     '0.5.1',
814 silly addNameRange     '0.5.2',
814 silly addNameRange     '0.5.3',
814 silly addNameRange     '0.5.4',
814 silly addNameRange     '0.5.5',
814 silly addNameRange     '0.5.6',
814 silly addNameRange     '0.5.7',
814 silly addNameRange     '0.5.8',
814 silly addNameRange     '0.5.9',
814 silly addNameRange     '0.6.0',
814 silly addNameRange     '1.0.0-beta',
814 silly addNameRange     '1.0.0',
814 silly addNameRange     '1.1.0',
814 silly addNameRange     '1.1.1',
814 silly addNameRange     '1.2.0',
814 silly addNameRange     '1.2.1' ] ]
815 verbose addNamed [ 'jsftp', '1.2.1' ]
816 verbose addNamed [ '1.2.1', '1.2.1' ]
817 silly lockFile d8434a16-jsftp-1-2-1 jsftp@1.2.1
818 verbose lock jsftp@1.2.1 /home/michael/.npm/d8434a16-jsftp-1-2-1.lock
819 silly lockFile 77593609--npmjs-org-jsftp-jsftp-1-2-1-tgz https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz
820 verbose lock https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz /home/michael/.npm/77593609--npmjs-org-jsftp-jsftp-1-2-1-tgz.lock
821 verbose addRemoteTarball [ 'https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz',
821 verbose addRemoteTarball   '909da61866875c69dc6fe2634d8f00ad61d5ee3b' ]
822 info retry fetch attempt 1 at 11:15:14
823 verbose fetch to= /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
824 http GET https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz
825 http 200 https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz
826 silly shasum updated bytes 37649
827 info shasum 909da61866875c69dc6fe2634d8f00ad61d5ee3b
827 info shasum /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
828 verbose tar unpack /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
829 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
830 verbose lock /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package /home/michael/.npm/9c2d9995-4099-0-41778476000763476-package.lock
831 silly lockFile 63c76fcb-4099-0-41778476000763476-tmp-tgz /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
832 verbose lock /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz /home/michael/.npm/63c76fcb-4099-0-41778476000763476-tmp-tgz.lock
833 silly gunzTarPerm modes [ '755', '644' ]
834 silly gunzTarPerm extractEntry package.json
835 silly gunzTarPerm extractEntry .npmignore
836 silly gunzTarPerm extractEntry README.md
837 silly gunzTarPerm extractEntry LICENSE
838 silly gunzTarPerm extractEntry index.js
839 silly gunzTarPerm extractEntry test.js
840 silly gunzTarPerm extractEntry Makefile
841 silly gunzTarPerm extractEntry lib/jsftp.js
842 silly gunzTarPerm extractEntry lib/utils.js
843 silly gunzTarPerm extractEntry lib/lib/jsftp.js
844 silly gunzTarPerm extractEntry lib/lib/response.js
845 silly gunzTarPerm extractEntry lib/lib/utils.js
846 silly gunzTarPerm extractEntry .travis.yml
847 silly gunzTarPerm extractEntry test/jsftp_test.js
848 silly gunzTarPerm extractEntry test/mockup_test.js
849 silly gunzTarPerm extractEntry test/keycert.pem
850 silly gunzTarPerm extractEntry test/test_c9/testfile.txt
851 silly gunzTarPerm extractEntry test/tls_ftpd.py
852 silly gunzTarPerm extractEntry .idea/libraries/Node_js_Dependencies_for_jsftp.xml
853 silly gunzTarPerm extractEntry .idea/.name
854 silly gunzTarPerm extractEntry .idea/encodings.xml
855 silly gunzTarPerm extractEntry .idea/inspectionProfiles/Project_Default.xml
856 silly gunzTarPerm extractEntry .idea/inspectionProfiles/profiles_settings.xml
857 silly gunzTarPerm extractEntry .idea/jsLibraryMappings.xml
858 silly gunzTarPerm extractEntry .idea/jsftp.iml
859 silly gunzTarPerm extractEntry .idea/codeStyleSettings.xml
860 silly gunzTarPerm extractEntry .idea/misc.xml
861 silly gunzTarPerm extractEntry .idea/modules.xml
862 silly gunzTarPerm extractEntry .idea/scopes/scope_settings.xml
863 silly gunzTarPerm extractEntry .idea/vcs.xml
864 silly gunzTarPerm extractEntry .idea/workspace.xml
865 verbose read json /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package/package.json
866 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
867 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
868 silly lockFile 63c76fcb-4099-0-41778476000763476-tmp-tgz /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
869 silly lockFile 63c76fcb-4099-0-41778476000763476-tmp-tgz /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/tmp.tgz
870 verbose from cache /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package/package.json
871 verbose tar pack [ '/home/michael/.npm/jsftp/1.2.1/package.tgz',
871 verbose tar pack   '/home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package' ]
872 verbose tarball /home/michael/.npm/jsftp/1.2.1/package.tgz
873 verbose folder /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
874 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
875 verbose lock /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package /home/michael/.npm/9c2d9995-4099-0-41778476000763476-package.lock
876 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
877 verbose lock /home/michael/.npm/jsftp/1.2.1/package.tgz /home/michael/.npm/60ed838f-hael-npm-jsftp-1-2-1-package-tgz.lock
878 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
879 silly lockFile 9c2d9995-4099-0-41778476000763476-package /home/michael/tmp/npm-2562/1395944114099-0.41778476000763476/package
880 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
881 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
882 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
883 verbose lock /home/michael/.npm/jsftp/1.2.1/package /home/michael/.npm/85776c5b--michael-npm-jsftp-1-2-1-package.lock
884 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
885 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
886 verbose tar unpack /home/michael/.npm/jsftp/1.2.1/package.tgz
887 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
888 verbose lock /home/michael/.npm/jsftp/1.2.1/package /home/michael/.npm/85776c5b--michael-npm-jsftp-1-2-1-package.lock
889 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
890 verbose lock /home/michael/.npm/jsftp/1.2.1/package.tgz /home/michael/.npm/60ed838f-hael-npm-jsftp-1-2-1-package-tgz.lock
891 silly gunzTarPerm modes [ '755', '644' ]
892 silly gunzTarPerm extractEntry package.json
893 silly gunzTarPerm extractEntry .npmignore
894 silly gunzTarPerm extractEntry README.md
895 silly gunzTarPerm extractEntry LICENSE
896 silly gunzTarPerm extractEntry index.js
897 silly gunzTarPerm extractEntry test.js
898 silly gunzTarPerm extractEntry Makefile
899 silly gunzTarPerm extractEntry lib/jsftp.js
900 silly gunzTarPerm extractEntry lib/utils.js
901 silly gunzTarPerm extractEntry lib/lib/jsftp.js
902 silly gunzTarPerm extractEntry lib/lib/response.js
903 silly gunzTarPerm extractEntry lib/lib/utils.js
904 silly gunzTarPerm extractEntry .travis.yml
905 silly gunzTarPerm extractEntry test/jsftp_test.js
906 silly gunzTarPerm extractEntry test/mockup_test.js
907 silly gunzTarPerm extractEntry test/keycert.pem
908 silly gunzTarPerm extractEntry test/test_c9/testfile.txt
909 silly gunzTarPerm extractEntry test/tls_ftpd.py
910 silly gunzTarPerm extractEntry .idea/libraries/Node_js_Dependencies_for_jsftp.xml
911 silly gunzTarPerm extractEntry .idea/.name
912 silly gunzTarPerm extractEntry .idea/encodings.xml
913 silly gunzTarPerm extractEntry .idea/inspectionProfiles/Project_Default.xml
914 silly gunzTarPerm extractEntry .idea/inspectionProfiles/profiles_settings.xml
915 silly gunzTarPerm extractEntry .idea/jsLibraryMappings.xml
916 silly gunzTarPerm extractEntry .idea/jsftp.iml
917 silly gunzTarPerm extractEntry .idea/codeStyleSettings.xml
918 silly gunzTarPerm extractEntry .idea/misc.xml
919 silly gunzTarPerm extractEntry .idea/modules.xml
920 silly gunzTarPerm extractEntry .idea/scopes/scope_settings.xml
921 silly gunzTarPerm extractEntry .idea/vcs.xml
922 silly gunzTarPerm extractEntry .idea/workspace.xml
923 verbose read json /home/michael/.npm/jsftp/1.2.1/package/package.json
924 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
925 silly lockFile 85776c5b--michael-npm-jsftp-1-2-1-package /home/michael/.npm/jsftp/1.2.1/package
926 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
927 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
928 silly shasum updated bytes 37651
929 info shasum a3dd1bb693a98a22e6ffd4e98cfa969fc55c55a0
929 info shasum /home/michael/.npm/jsftp/1.2.1/package.tgz
930 verbose from cache /home/michael/.npm/jsftp/1.2.1/package/package.json
931 verbose chmod /home/michael/.npm/jsftp/1.2.1/package.tgz 644
932 verbose chown /home/michael/.npm/jsftp/1.2.1/package.tgz [ 1000, 1000 ]
933 silly lockFile 77593609--npmjs-org-jsftp-jsftp-1-2-1-tgz https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz
934 silly lockFile 77593609--npmjs-org-jsftp-jsftp-1-2-1-tgz https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz
935 silly lockFile d8434a16-jsftp-1-2-1 jsftp@1.2.1
936 silly lockFile d8434a16-jsftp-1-2-1 jsftp@1.2.1
937 silly lockFile 0539835c-jsftp-1-x jsftp@1.x
938 silly lockFile 0539835c-jsftp-1-x jsftp@1.x
939 silly resolved [ { name: 'morestreams',
939 silly resolved     description: 'Collection of useful stream objects.',
939 silly resolved     version: '0.1.1',
939 silly resolved     repository: { type: 'git', url: 'git@github.com:mikeal/morestreams.git' },
939 silly resolved     author:
939 silly resolved      { name: 'Mikeal Rogers',
939 silly resolved        email: 'mikeal.rogers@gmail.com',
939 silly resolved        url: 'http://www.mikealrogers.com' },
939 silly resolved     main: 'main.js',
939 silly resolved     directories: { lib: '.' },
939 silly resolved     engines: { node: '*' },
939 silly resolved     _id: 'morestreams@0.1.1',
939 silly resolved     readme: 'ERROR: No README.md file found!',
939 silly resolved     dist: { shasum: '9f990d5cd1c336e92c8c51b884349c33dda509b6' },
939 silly resolved     _from: 'morestreams@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/morestreams/-/morestreams-0.1.1.tgz' },
939 silly resolved   { name: 'weighted',
939 silly resolved     version: '0.2.2',
939 silly resolved     description: 'A dead-simple module for picking a random item with weights.',
939 silly resolved     main: 'index.js',
939 silly resolved     directories: { test: 'test' },
939 silly resolved     scripts:
939 silly resolved      { test: 'echo "Error: no test specified" && exit 1',
939 silly resolved        bench: 'survey bench/weighted.js' },
939 silly resolved     repository:
939 silly resolved      { type: 'git',
939 silly resolved        url: 'git://github.com/Schoonology/weighted.git' },
939 silly resolved     keywords: [ 'simple', 'random', 'weighted', 'weights', 'ai', 'bot' ],
939 silly resolved     author:
939 silly resolved      { name: 'Michael Schoonmaker',
939 silly resolved        email: 'michael.r.schoonmaker@gmail.com' },
939 silly resolved     license: 'MIT',
939 silly resolved     devDependencies: { survey: '~0.3.2' },
939 silly resolved     readme: '# weighted\n\nA dead-simple module for picking a random item from a set, with weights. Extremely useful for bot scripting.\n\n## Installation\n\nIt\'s on NPM:\n\n    npm install weighted\n\n## Usage\n\n### Selection Function\n\nWeighted returns a Function additionally available as `weighted.select`:\n\n    weighted.select(set, weights, [rand])\n    weighted.select(obj, [rand])\n\nSelections can be made based on either a pair of Arrays or a single Object, like so:\n\n#### Array Version\n\n    var weighted = require(\'weighted\')\n\n    var options = [\'Wake Up\', \'Snooze Alarm\']\n      , weights = [0.25, 0.75]\n\n    console.log(\'Decision:\', weighted.select(options, weights))\n\n#### Object Version\n\n    var weighted = require(\'weighted\')\n\n    var options = {\n    \t  \'Wake Up\': 0.25,\n    \t  \'Snooze Alarm\': 0.75\n    \t}\n\n    console.log(\'Decision:\', weighted.select(options))\n\n### Overriding Rand\n\nBy default, `weighted.select` uses Math.random() for selection. This can be overridden by providing a Function as the third, `rand`, parameter:\n\n    var weighted = require(\'weighted\')\n      , mersenne = require(\'mersenne\')\n\n    var options = [\'Wake Up\', \'Snooze Alarm\']\n      , weights = [0.25, 0.75]\n\n    function rand() {\n      return mersenne.rand() / 32768\n    }\n\n    console.log(\'Decision:\', weighted.select(options, weights, rand))\n\n## A Note on Weights\n\nVersion 0.1 required that all weights add up to exactly 1. As of version 0.2 this is no longer required, simply recommended.\n\n## A Note on Performance\n\nWeighted is optimized for selection, especially repeated selection over the same Arrays of actions and weights. See the output and source of `npm run-script bench` for details.\n\n## Thanks\n\n * The AI folks at 38 Studios for teaching me just how "intelligent" random activity can seem.\n\n## License\n\n    Copyright (C) 2012 Michael Schoonmaker (michael.r.schoonmaker@gmail.com)\n\n    This project is free software released under the MIT/X11 license:\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
939 silly resolved     readmeFilename: 'README.md',
939 silly resolved     _id: 'weighted@0.2.2',
939 silly resolved     dist: { shasum: 'a548839ca8b48510683b57988086b1a23c4d7de4' },
939 silly resolved     _from: 'weighted@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/weighted/-/weighted-0.2.2.tgz' },
939 silly resolved   { name: 'seq',
939 silly resolved     version: '0.3.5',
939 silly resolved     description: 'Chainable asynchronous flow control with sequential and parallel primitives and pipeline-style error handling',
939 silly resolved     main: './index.js',
939 silly resolved     repository: { type: 'git', url: 'http://github.com/substack/node-seq.git' },
939 silly resolved     dependencies: { chainsaw: '>=0.0.7 <0.1', hashish: '>=0.0.2 <0.1' },
939 silly resolved     devDependencies: { expresso: '>=0.7.x' },
939 silly resolved     script: { test: 'expresso' },
939 silly resolved     keywords:
939 silly resolved      [ 'flow-control',
939 silly resolved        'flow',
939 silly resolved        'control',
939 silly resolved        'async',
939 silly resolved        'asynchronous',
939 silly resolved        'chain',
939 silly resolved        'pipeline',
939 silly resolved        'sequence',
939 silly resolved        'sequential',
939 silly resolved        'parallel',
939 silly resolved        'error' ],
939 silly resolved     author:
939 silly resolved      { name: 'James Halliday',
939 silly resolved        email: 'mail@substack.net',
939 silly resolved        url: 'http://substack.net' },
939 silly resolved     license: 'MIT/X11',
939 silly resolved     engine: { node: '>=0.4.0' },
939 silly resolved     readme: 'Seq\n===\n\nSeq is an asynchronous flow control library with a chainable interface for\nsequential and parallel actions. Even the error handling is chainable.\n\nEach action in the chain operates on a stack of values.\nThere is also a variables hash for storing values by name.\n\n[TOC]\n\n\n\nExamples\n========\n\nstat_all.js\n-----------\n\n````javascript\nvar fs = require(\'fs\');\nvar Hash = require(\'hashish\');\nvar Seq = require(\'seq\');\n\nSeq()\n    .seq(function () {\n        fs.readdir(__dirname, this);\n    })\n    .flatten()\n    .parEach(function (file) {\n        fs.stat(__dirname + \'/\' + file, this.into(file));\n    })\n    .seq(function () {\n        var sizes = Hash.map(this.vars, function (s) { return s.size })\n        console.dir(sizes);\n    })\n;\n````\n\nOutput:\n\n    { \'stat_all.js\': 404, \'parseq.js\': 464 }\n\nparseq.js\n---------\n\n````javascript\nvar fs = require(\'fs\');\nvar exec = require(\'child_process\').exec;\n\nvar Seq = require(\'seq\');\nSeq()\n    .seq(function () {\n        exec(\'whoami\', this)\n    })\n    .par(function (who) {\n        exec(\'groups \' + who, this);\n    })\n    .par(function (who) {\n        fs.readFile(__filename, \'ascii\', this);\n    })\n    .seq(function (groups, src) {\n        console.log(\'Groups: \' + groups.trim());\n        console.log(\'This file has \' + src.length + \' bytes\');\n    })\n;\n````\n\nOutput:\n\n    Groups: substack : substack dialout cdrom floppy audio src video plugdev games netdev fuse www\n    This file has 464 bytes\n\n\n\n\nAPI\n===\n\nEach method executes callbacks with a context (its `this`) described in the next\nsection. Every method returns `this`.\n\nWhenever `this()` is called with a non-falsy first argument, the error value\npropagates down to the first `catch` it sees, skipping over all actions in\nbetween. There is an implicit `catch` at the end of all chains that prints the\nerror stack if available and otherwise just prints the error.\n\n\n\nSeq(xs=[])\n----------\n\nThe constructor function creates a new `Seq` chain with the methods described\nbelow. The optional array argument becomes the new context stack.\n\nArray argument is new in 0.3. `Seq()` now behaves like `Seq.ap()`.\n\n\n.seq(cb)\n--------\n.seq(key, cb, *args)\n--------------------\n\nThis eponymous function executes actions sequentially.\nOnce all running parallel actions are finished executing,\nthe supplied callback is `apply()`\'d with the context stack.\n\nTo execute the next action in the chain, call `this()`. The first\nargument must be the error value. The rest of the values will become the stack\nfor the next action in the chain and are also available at `this.args`.\n\nIf `key` is specified, the second argument sent to `this` goes to\n`this.vars[key]` in addition to the stack and `this.args`.\n`this.vars` persists across all requests unless it is overwritten.\n\nAll arguments after `cb` will be bound to `cb`, which is useful because\n`.bind()` makes you set `this`. If you pass in `Seq` in the arguments list,\nit\'ll get transformed into `this` so that you can do:\n\n````javascript\nSeq()\n    .seq(fs.readdir, __dirname, Seq)\n    .seq(function (files) { console.dir(files) })\n;\n````\n\nwhich prints an array of files in `__dirname`.\n\n\n.par(cb)\n--------\n.par(key, cb, *args)\n--------------------\n\nUse `par` to execute actions in parallel.\nChain multiple parallel actions together and collect all the responses on the\nstack with a sequential operation like `seq`.\n\nEach `par` sets one element in the stack with the second argument to `this()` in\nthe order in which it appears, so multiple `par`s can be chained together.\n\nLike with `seq`, the first argument to `this()` should be the error value and\nthe second will get pushed to the stack. Further arguments are available in\n`this.args`.\n\nIf `key` is specified, the result from the second argument send to `this()` goes\nto `this.vars[key]`.\n`this.vars` persists across all requests unless it is overwritten.\n\nAll arguments after `cb` will be bound to `cb`, which is useful because\n`.bind()` makes you set `this`. Like `.seq()`, you can pass along `Seq` in these\nbound arguments and it will get tranformed into `this`.\n\n\n.catch(cb)\n----------\n\nCatch errors. Whenever a function calls `this` with a non-falsy first argument,\nthe message propagates down the chain to the first `catch` it sees.\nThe callback `cb` fires with the error object as its first argument and the key\nthat the action that caused the error was populating, which may be undefined.\n\n`catch` is a sequential action and further actions may appear after a `catch` in\na chain. If the execution reaches a `catch` in a chain and no error has occured,\nthe `catch` is skipped over.\n\nFor convenience, there is a default error handler at the end of all chains.\nThis default error handler looks like this:\n\n````javascript\n.catch(function (err) {\n    console.error(err.stack ? err.stack : err)\n})\n````\n\n\n.forEach(cb)\n------------\n\nExecute each action in the stack under the context of the chain object.\n`forEach` does not wait for any of the actions to finish and does not itself\nalter the stack, but the callback may alter the stack itself by modifying\n`this.stack`.\n\nThe callback is executed `cb(x,i)` where `x` is the element and `i` is the\nindex. \n\n`forEach` is a sequential operation like `seq` and won\'t run until all pending\nparallel requests yield results.\n\n\n.seqEach(cb)\n------------\n\nLike `forEach`, call `cb` for each element on the stack, but unlike `forEach`,\n`seqEach` waits for the callback to yield with `this` before moving on to the\nnext element in the stack.\n\nThe callback is executed `cb(x,i)` where `x` is the element and `i` is the\nindex. \n\nIf `this()` is supplied non-falsy error, the error propagates downward but any\nother arguments are ignored. `seqEach` does not modify the stack itself.\n\n\n.parEach(cb)\n------------\n.parEach(limit, cb)\n-------------------\n\nLike `forEach`, calls cb for each element in the stack and doesn\'t wait for the\ncallback to yield a result with `this()` before moving on to the next iteration.\nUnlike `forEach`, `parEach` waits for all actions to call `this()` before moving\nalong to the next action in the chain.\n\nThe callback is executed `cb(x,i)` where `x` is the element and `i` is the\nindex. \n\n`parEach` does not modify the stack itself and errors supplied to `this()`\npropagate.\n\nOptionally, if limit is supplied to `parEach`, at most `limit` callbacks will be\nactive at a time.\n\n\n.seqMap(cb)\n-----------\n\nLike `seqEach`, but collect the values supplied to `this` and set the stack to\nthese values.\n\n\n.parMap(cb)\n-----------\n.parMap(limit, cb)\n------------------\n\nLike `parEach`, but collect the values supplied to `this` and set the stack to\nthese values.\n\n\n.seqFilter(cb)\n-----------\n\nExecutes the callback `cb(x, idx)` against each element on the stack, waiting for the\ncallback to yield with `this` before moving on to the next element. If the callback \nreturns an error or a falsey value, the element will not be included in the resulting\nstack.\n\nAny errors from the callback are consumed and **do not** propagate.\n\nCalls to `this.into(i)` will place the value, if accepted by the callback, at the index in\nthe results as if it were ordered at i-th index on the stack before filtering (with ties\nbroken by the values). This implies `this.into` will never override another stack value\neven if their indices collide. Finally, the value will only actually appear at `i` if the\ncallback accepts or moves enough values before `i`.\n\n\n.parFilter(cb)\n-----------\n.parFilter(limit, cb)\n------------------\n\nExecutes the callback `cb(x, idx)` against each element on the stack, but **does not**\nwait for it to yield before moving on to the next element. If the callback returns an\nerror or a falsey value, the element will not be included in the resulting stack.\n\nAny errors from the callback are consumed and **do not** propagate.\n\nCalls to `this.into(i)` will place the value, if accepted by the callback, at the index in\nthe results as if it were ordered at i-th index on the stack before filtering (with ties\nbroken by the values). This implies `this.into` will never override another stack value\neven if their indices collide. Finally, the value will only actually appear at `i` if the\ncallback accepts or moves enough values before `i`.\n\nOptionally, if limit is supplied to `parEach`, at most `limit` callbacks will be\nactive at a time.\n\n\n.do(cb)\n-------\nCreate a new nested context. `cb`\'s first argument is the previous context, and `this`\nis the nested `Seq` object.\n\n\n.flatten(fully=true)\n--------------------\n\nRecursively flatten all the arrays in the stack. Set `fully=false` to flatten\nonly one level.\n\n\n.unflatten()\n------------\n\nTurn the contents of the stack into a single array item. You can think of it\nas the inverse of `flatten(false)`.\n\n\n.extend([x,y...])\n-----------------\n\nLike `push`, but takes an array. This is like python\'s `[].extend()`.\n\n\n.set(xs)\n--------\n\nSet the stack to a new array. This assigns the reference, it does not copy.\n\n\n.empty()\n--------\n\nSet the stack to [].\n\n\n.push(x,y...), .pop(), .shift(), .unshift(x), .splice(...), reverse()\n---------------------------------------------------------------------\n.map(...), .filter(...), .reduce(...)\n-------------------------------------\n\nExecutes an array operation on the stack.\n\nThe methods `map`, `filter`, and `reduce` are also proxies to their Array counterparts:\nthey have identical signatures to the Array methods, operate synchronously on the context\nstack, and do not pass a Context object (unlike `seqMap` and `parMap`).\n\nThe result of the transformation is assigned to the context stack; in the case of `reduce`,\nif you do not return an array, the value will be wrapped in one.\n\n````javascript\nSeq([1, 2, 3])\n    .reduce(function(sum, x){ return sum + x; }, 0)\n    .seq(function(sum){\n        console.log(\'sum: %s\', sum);\n        // sum: 6\n        console.log(\'stack is Array?\', Array.isArray(this.stack));\n        // stack is Array: true\n        console.log(\'stack:\', this.stack);\n        // stack: [6]\n    })\n;\n````\n\n\n\n\nExplicit Parameters\n-------------------\n\nFor environments like coffee-script or nested logic where threading `this` is\nbothersome, you can use:\n\n* seq_\n* par_\n* forEach_\n* seqEach_\n* parEach_\n* seqMap_\n* parMap_\n\nwhich work exactly like their un-underscored counterparts except for the first\nparameter to the supplied callback is set to the context, `this`.\n\n\n\nContext Object\n==============\n\nEach callback gets executed with its `this` set to a function in order to yield\nresults, error values, and control. The function also has these useful fields:\n\nthis.stack\n----------\n\nThe execution stack.\n\nthis.stack_\n-----------\n\nThe previous stack value, mostly used internally for hackish purposes.\n\nthis.vars\n---------\n\nA hash of key/values populated with `par(key, ...)`, `seq(key, ...)` and\n`this.into(key)`.\n\nthis.into(key)\n--------------\n\nInstead of sending values to the stack, sets a key and returns `this`.\nUse `this.into(key)` interchangeably with `this` for yielding keyed results.\n`into` overrides the optional key set by `par(key, ...)` and `seq(key, ...)`.\n\nthis.ok\n-------\n\nSet the `err` to null. Equivalent to `this.bind(this, null)`.\n\nthis.args\n---------\n\n`this.args` is like `this.stack`, but it contains all the arguments to `this()`\npast the error value, not just the first. `this.args` is an array with the same\nindices as `this.stack` but also stores keyed values for the last sequential\noperation. Each element in `this.array` is set to `[].slice.call(arguments, 1)`\nfrom inside `this()`.\n\nthis.error\n----------\n\nThis is used for error propagation. You probably shouldn\'t mess with it.\n\n\n\nInstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n\n    npm install seq\n\nor clone this project on github:\n\n    git clone http://github.com/substack/node-seq.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n\n    expresso\n\n\n\nDependencies\n------------\n\nThis module uses [chainsaw](http://github.com/substack/node-chainsaw)\nWhen you `npm install seq` this dependency will automatically be installed.\n\n\n',
939 silly resolved     readmeFilename: 'README.markdown',
939 silly resolved     _id: 'seq@0.3.5',
939 silly resolved     dist: { shasum: '832ca106bdccd4d6ee4e6097d7f02b19ecf46e30' },
939 silly resolved     _from: 'seq@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/seq/-/seq-0.3.5.tgz' },
939 silly resolved   { name: 'memorystream',
939 silly resolved     description: 'This is lightweight memory stream module for node.js.',
939 silly resolved     version: '0.2.0',
939 silly resolved     keywords: [ 'memory', 'test', 'stream', 'tools', 'streams' ],
939 silly resolved     devDependencies: { expresso: '>=0.7.x', jslint: '*' },
939 silly resolved     author: { name: 'Dmitry Nizovtsev', url: 'https://github.com/JSBizon' },
939 silly resolved     contributors: [ [Object] ],
939 silly resolved     repository:
939 silly resolved      { type: 'git',
939 silly resolved        url: 'https://github.com/JSBizon/node-memorystream.git' },
939 silly resolved     homepage: 'https://github.com/JSBizon/node-memorystream',
939 silly resolved     engines: { node: '>= 0.3.0' },
939 silly resolved     licenses: [ [Object] ],
939 silly resolved     readme: '# Introduction\nnode-memorystream - this module allow create streams in memory. It can be used for emulating file streams, filtering/mutating data between one stream and another, buffering incoming data, being the gap between two data/network streams of variable rates, etc. MemoryStream support read/write states or only read state or only write state. The API is meant to follow node\'s Stream implementation.\n\nOriginal module is here git://github.com/ollym/memstream.git was remade and improved. \n\n## Installation\nIf you have npm installed, you can simply type:\n\n\tnpm install memorystream\n\t\nOr you can clone this repository using the git command:\n\n\tgit clone git://github.com/JSBizon/node-memorystream.git\n\t\n## Usage\nSome examples how to use memorystream module.\n\n#### Basic I/O Operation\nIn this example I illustrate the basic I/O operations of the memory stream.\n\n\tvar MemoryStream = require(\'memorystream\');\n\tvar memStream = new MemoryStream([\'Hello\',\' \']);\n\t\n\tvar data = \'\';\n\tmemStream.on(\'data\', function(chunk) {\n\t\tdata += chunk.toString();\n\t});\n\t\n\tmemStream.write(\'World\');\n\t\n\tmemStream.on(\'end\', function() {\n\t\t// outputs \'Hello World!\'\n\t\tconsole.log(data);\n\t});\n\tmemStream.end(\'!\');\n\t\n#### Piping\nIn this example I\'m piping all data from the memory stream to the process\'s stdout stream.\n\n\tvar MemoryStream = require(\'memorystream\');\n\tvar memStream = new MemoryStream();\n\tmemStream.pipe(process.stdout, { end: false });\n\t\n\tmemStream.write(\'Hello World!\');\n\t\nIn this example I\'m piping all data from the response stream to the memory stream.\n\n\tvar http = require(\'http\'),\n\t\tMemoryStream = require(\'memorystream\');\n\n\tvar options = {\n\t\thost: \'google.com\'\n\t};\n\tvar memStream = new MemoryStream(null, {\n\t\treadable : false\n\t});\n\n\tvar req = http.get(options, function(res) {\n\t\tres.pipe(memStream);\n\t\tres.on(\'end\', function() {\n\t\t\tconsole.log(memStream.toString());\n\t\t});\n\t});\n\n#### Delayed Response\nIn the example below, we first pause the stream before writing the data to it. The stream is then resumed after 1 second, and the data is written to the console.\n\n\tvar MemoryStream = require(\'memorystream\');\n\n\tvar memStream = new MemoryStream(\'Hello\');\n\tvar data = \'\';\n\tmemStream.on(\'data\', function(chunk) {\n\t\tdata += chunk;\n\t});\n\t\n\tmemStream.pause();\n\tmemStream.write(\'World!\');\n\t\n\tsetTimeout(function() {\n\t\tmemStream.resume();\n\t}, 1000);\n\n## Documentation\nThe memory stream adopts all the same methods and events as node\'s Stream implementation.\nDocumentation is [available here](http://github.com/JSBizon/node-memorystream/wiki/API/ "Documentation").\n\n\n\n\t',
939 silly resolved     readmeFilename: 'README.md',
939 silly resolved     _id: 'memorystream@0.2.0',
939 silly resolved     dist: { shasum: '4b9ffbab87f462d52c85c9d45867dd92d347a6a6' },
939 silly resolved     _from: 'memorystream@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/memorystream/-/memorystream-0.2.0.tgz' },
939 silly resolved   { author: { name: 'Michael Jackson', email: 'mjijackson@gmail.com' },
939 silly resolved     name: 'bufferedstream',
939 silly resolved     description: 'A stream class for node that reliably buffers until next tick',
939 silly resolved     version: '1.6.0',
939 silly resolved     repository:
939 silly resolved      { type: 'git',
939 silly resolved        url: 'git://github.com/mjijackson/bufferedstream.git' },
939 silly resolved     main: './buffered-stream.js',
939 silly resolved     scripts: { test: 'mocha test' },
939 silly resolved     engines: { node: '>=0.4.7' },
939 silly resolved     dependencies: {},
939 silly resolved     devDependencies: { mocha: '1.5.0' },
939 silly resolved     readme: '[![build status](https://secure.travis-ci.org/mjijackson/bufferedstream.png)](http://travis-ci.org/mjijackson/bufferedstream)\n\nBufferedStream is a reliable base class for streams in node programs that buffers data until the next tick of the event loop.\n\n## Rationale\n\nThe details of streams are still being worked out in node core. As of this writing there are several different types of streams in node, including some objects that do not actually inherit from Stream. The goal of this library is to iron out the differences between the various stream-like objects and give user code a reliable, documented API they can use now. If the situation ever improves in node core (which we all hope it will) this code may become obsolete.\n\n## Installation\n\nUsing [npm](http://npmjs.org):\n\n    $ npm install bufferedstream\n\n## Usage\n\nThe key feature of this class is that anything you write to the stream in the current tick of the event loop is buffered until the next tick. This allows you to register event handlers, pause the stream, etc. reliably without losing any data.\n\n```javascript\nvar BufferedStream = require(\'bufferedstream\');\n\nvar stream = new BufferedStream;\nstream.write(\'Hello \');\nstream.pause();\n\nsetTimeout(function () {\n  stream.write(\'IHdvcmxkLg==\', \'base64\');\n  stream.resume();\n  stream.on(\'data\', function (chunk) {\n    console.log(chunk.toString()); // Hello world.\n  });\n}, 10);\n```\n\nThe `BufferedStream` constructor may also accept a "source" which may be another stream that will be piped directly through to this stream or a string. This is useful for wrapping various stream-like objects and normalizing their behavior across implementations.\n\nPlease see the source code for more information. The module is small enough (and well-documented) that it should be easy to digest in a quick skim.\n\n## Tests\n\nRun the tests with [mocha](http://visionmedia.github.com/mocha/):\n\n    $ mocha test\n\n## License\n\nCopyright 2012 Michael Jackson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe software is provided "as is", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and non-infringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\n',
939 silly resolved     readmeFilename: 'README.md',
939 silly resolved     _id: 'bufferedstream@1.6.0',
939 silly resolved     dist: { shasum: '92a06a2c3b6ce405745001eb5b81d0553325c1f8' },
939 silly resolved     _from: 'bufferedstream@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/bufferedstream/-/bufferedstream-1.6.0.tgz' },
939 silly resolved   { name: 'forever',
939 silly resolved     preferGlobal: 'true',
939 silly resolved     description: 'A simple CLI tool for ensuring that a given node script runs continuously (i.e. forever)',
939 silly resolved     version: '0.10.11',
939 silly resolved     author: { name: 'Nodejitsu Inc.', email: 'info@nodejitsu.com' },
939 silly resolved     maintainers: [ [Object], [Object], [Object] ],
939 silly resolved     repository: { type: 'git', url: 'http://github.com/nodejitsu/forever.git' },
939 silly resolved     keywords: [ 'cli', 'fault tolerant', 'sysadmin', 'tools' ],
939 silly resolved     dependencies:
939 silly resolved      { colors: '~0.6.2',
939 silly resolved        cliff: '0.1.8',
939 silly resolved        flatiron: '~0.3.11',
939 silly resolved        'forever-monitor': '1.2.3',
939 silly resolved        nconf: '~0.6.9',
939 silly resolved        nssocket: '~0.5.1',
939 silly resolved        optimist: '~0.6.0',
939 silly resolved        pkginfo: '0.3.0',
939 silly resolved        timespan: '~2.3.0',
939 silly resolved        watch: '~0.8.0',
939 silly resolved        utile: '~0.2.1',
939 silly resolved        winston: '~0.7.2' },
939 silly resolved     devDependencies:
939 silly resolved      { broadway: '0.2.x',
939 silly resolved        eventemitter2: '0.4.x',
939 silly resolved        request: '2.x.x',
939 silly resolved        vows: '0.7.x' },
939 silly resolved     bin: { forever: './bin/forever', foreverd: './bin/foreverd' },
939 silly resolved     main: './lib/forever',
939 silly resolved     scripts: { test: 'vows test/**/*-test.js --spec -i' },
939 silly resolved     engines: { node: '>= 0.8.x' },
939 silly resolved     readme: '# forever [![Build Status](https://secure.travis-ci.org/nodejitsu/forever.png)](http://travis-ci.org/nodejitsu/forever)\n\nA simple CLI tool for ensuring that a given script runs continuously (i.e. forever).\n\n## Installation\n\n``` bash\n  $ [sudo] npm install forever -g\n```\n\n**Note:** If you are using forever _programatically_ you should install [forever-monitor][0].\n\n``` bash\n  $ cd /path/to/your/project\n  $ [sudo] npm install forever-monitor\n```\n\n## Usage\nThere are two distinct ways to use forever: through the command line interface, or by requiring the forever module in your own code. **Note:** If you are using forever _programatically_ you should install [forever-monitor][0].\n\n### Using forever from the command line\nYou can use forever to run any kind of script continuously (whether it is written in node.js or not). The usage options are simple:\n\n```\n  $ forever --help\n  usage: forever [action] [options] SCRIPT [script-options]\n\n  Monitors the script specified in the current process or as a daemon\n\n  actions:\n    start               Start SCRIPT as a daemon\n    stop                Stop the daemon SCRIPT\n    stopall             Stop all running forever scripts\n    restart             Restart the daemon SCRIPT\n    restartall          Restart all running forever scripts\n    list                List all running forever scripts\n    config              Lists all forever user configuration\n    set <key> <val>     Sets the specified forever config <key>\n    clear <key>         Clears the specified forever config <key>\n    logs                Lists log files for all forever processes\n    logs <script|index> Tails the logs for <script|index>\n    columns add <col>   Adds the specified column to the output in `forever list`\n    columns rm <col>    Removed the specified column from the output in `forever list`\n    columns set <cols>  Set all columns for the output in `forever list`\n    cleanlogs           [CAREFUL] Deletes all historical forever log files\n\n  options:\n    -m  MAX          Only run the specified script MAX times\n    -l  LOGFILE      Logs the forever output to LOGFILE\n    -o  OUTFILE      Logs stdout from child script to OUTFILE\n    -e  ERRFILE      Logs stderr from child script to ERRFILE\n    -p  PATH         Base path for all forever related files (pid files, etc.)\n    -c  COMMAND      COMMAND to execute (defaults to node)\n    -a, --append     Append logs\n    -f, --fifo       Stream logs to stdout\n    -n, --number     Number of log lines to print\n    --pidFile        The pid file\n    --sourceDir      The source directory for which SCRIPT is relative to\n    --minUptime      Minimum uptime (millis) for a script to not be considered "spinning"\n    --spinSleepTime  Time to wait (millis) between launches of a spinning script.\n    --colors         --no-colors will disable output coloring\n    --plain          Disable command line colors\n    -d, --debug      Forces forever to log debug output\n    -v, --verbose    Turns on the verbose messages from Forever\n    -s, --silent     Run the child script silencing stdout and stderr\n    -w, --watch      Watch for file changes\n    --watchDirectory Top-level directory to watch from\n    --watchIgnore    To ignore pattern when watch is enabled (multiple option is allowed)\n    --killSignal     Support exit signal customization (default is SIGKILL), \n                     used for restarting script gracefully eg. --killSignal=SIGTERM\n    -h, --help       You\'re staring at it\n\n  [Long Running Process]\n    The forever process will continue to run outputting log messages to the console.\n    ex. forever -o out.log -e err.log my-script.js\n\n  [Daemon]\n    The forever process will run as a daemon which will make the target process start\n    in the background. This is extremely useful for remote starting simple node.js scripts\n    without using nohup. It is recommended to run start with -o -l, & -e.\n    ex. forever start -l forever.log -o out.log -e err.log my-daemon.js\n        forever stop my-daemon.js\n```\n\nThere are [several examples][1] designed to test the fault tolerance of forever. Here\'s a simple usage example:\n\n``` bash\n  $ forever -m 5 examples/error-on-timer.js\n```\n\n## Using forever module from node.js\nIn addition to using a Forever object, the forever module also exposes some useful methods. Each method returns an instance of an EventEmitter which emits when complete. See the [forever cli commands][2] for sample usage.\n\n**Remark:** As of `forever@0.6.0` processes will not automatically be available in `forever.list()`. In order to get your processes into `forever.list()` or `forever list` you must instantiate the `forever` socket server:\n\n``` js\n  forever.startServer(child);\n```\n\n### forever.load (config)\n_Synchronously_ sets the specified configuration (config) for the forever module. There are two important options:\n\n* root:    Directory to put all default forever log files\n* pidPath: Directory to put all forever *.pid files\n\n### forever.start (file, options)\nStarts a script with forever.\n\n### forever.startDaemon (file, options)\nStarts a script with forever as a daemon. WARNING: Will daemonize the current process.\n\n### forever.stop (index)\nStops the forever daemon script at the specified index. These indices are the same as those returned by forever.list(). This method returns an EventEmitter that raises the \'stop\' event when complete.\n\n### forever.stopAll (format)\nStops all forever scripts currently running. This method returns an EventEmitter that raises the \'stopAll\' event when complete.\n\n### forever.list (format, callback)\nReturns a list of metadata objects about each process that is being run using forever. This method is synchronous and will return the list of metadata as such. Only processes which have invoked `forever.startServer()` will be available from `forever.list()`\n\n### forever.tail (target, options, callback)\nResponds with the logs from the target script(s) from `tail`. There are two important options:\n\n* `length` (numeric): is is used as the `-n` parameter to `tail`.\n* `stream` (boolean): is is used as the `-f` parameter to `tail`.\n\n### forever.cleanUp ()\nCleans up any extraneous forever *.pid files that are on the target system. This method returns an EventEmitter that raises the \'cleanUp\' event when complete.\n\n### forever.cleanLogsSync (processes)\nRemoves all log files from the root forever directory that do not belong to current running forever processes.\n\n## Run Tests\n\n``` bash\n  $ npm test\n```\n\n#### License: MIT\n#### Author: [Charlie Robbins](http://github.com/indexzero)\n#### Contributors: [Fedor Indutny](http://github.com/indutny), [James Halliday](http://substack.net/), [Charlie McConnell](http://github.com/avianflu), [Maciej Malecki](http://github.com/mmalecki), [John Lancaster](http://jlank.com)\n\n[0]: http://github.com/nodejitsu/forever-monitor\n[1]: http://github.com/nodejitsu/forever-monitor/tree/master/examples\n[2]: https://github.com/nodejitsu/forever/blob/master/lib/forever/cli.js\n',
939 silly resolved     readmeFilename: 'README.md',
939 silly resolved     _id: 'forever@0.10.11',
939 silly resolved     _from: 'forever@0.x' },
939 silly resolved   { author:
939 silly resolved      { name: 'Felix Geisendörfer',
939 silly resolved        email: 'felix@debuggable.com',
939 silly resolved        url: 'http://debuggable.com/' },
939 silly resolved     name: 'mysql',
939 silly resolved     description: 'A node.js driver for mysql. It is written in JavaScript, does not require compiling, and is 100% MIT licensed.',
939 silly resolved     version: '2.1.1',
939 silly resolved     homepage: 'https://github.com/felixge/node-mysql',
939 silly resolved     repository: { type: 'git', url: 'https://github.com/felixge/node-mysql' },
939 silly resolved     main: './index',
939 silly resolved     scripts: { test: 'make test' },
939 silly resolved     engines: { node: '*' },
939 silly resolved     dependencies:
939 silly resolved      { 'require-all': '0.0.3',
939 silly resolved        'bignumber.js': '1.0.1',
939 silly resolved        'readable-stream': '~1.1.9' },
939 silly resolved     devDependencies: { utest: '0.0.6', urun: '0.0.6', underscore: '1.3.1' },
939 silly resolved     optionalDependencies: {},
939 silly resolved     readme: '# node-mysql\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-mysql.png)](http://travis-ci.org/felixge/node-mysql)\n\n## Install\n\n```bash\nnpm install mysql\n```\n\nFor information about the previous 0.9.x releases, visit the [v0.9 branch][].\n\nSometimes I may also ask you to install the latest version from Github to check\nif a bugfix is working. In this case, please do:\n\n```\nnpm install felixge/node-mysql\n```\n\n[v0.9 branch]: https://github.com/felixge/node-mysql/tree/v0.9\n\n## Introduction\n\nThis is a node.js driver for mysql. It is written in JavaScript, does not\nrequire compiling, and is 100% MIT licensed.\n\nHere is an example on how to use it:\n\n```js\nvar mysql      = require(\'mysql\');\nvar connection = mysql.createConnection({\n  host     : \'localhost\',\n  user     : \'me\',\n  password : \'secret\'\n});\n\nconnection.connect();\n\nconnection.query(\'SELECT 1 + 1 AS solution\', function(err, rows, fields) {\n  if (err) throw err;\n\n  console.log(\'The solution is: \', rows[0].solution);\n});\n\nconnection.end();\n```\n\nFrom this example, you can learn the following:\n\n* Every method you invoke on a connection is queued and executed in sequence.\n* Closing the connection is done using `end()` which makes sure all remaining\n  queries are executed before sending a quit packet to the mysql server.\n\n## Contributors\n\nThanks goes to the people who have contributed code to this module, see the\n[GitHub Contributors page][].\n\n[GitHub Contributors page]: https://github.com/felixge/node-mysql/graphs/contributors\n\nAdditionally I\'d like to thank the following people:\n\n* [Andrey Hristov][] (Oracle) - for helping me with protocol questions.\n* [Ulf Wendel][] (Oracle) - for helping me with protocol questions.\n\n[Ulf Wendel]: http://blog.ulf-wendel.de/\n[Andrey Hristov]: http://andrey.hristov.com/\n\n## Sponsors\n\nThe following companies have supported this project financially, allowing me to\nspend more time on it (ordered by time of contribution):\n\n* [Transloadit](http://transloadit.com) (my startup, we do file uploading &\n  video encoding as a service, check it out)\n* [Joyent](http://www.joyent.com/)\n* [pinkbike.com](http://pinkbike.com/)\n* [Holiday Extras](http://www.holidayextras.co.uk/) (they are [hiring](http://join.holidayextras.co.uk/vacancy/software-engineer/))\n* [Newscope](http://newscope.com/) (they are [hiring](http://www.newscope.com/stellenangebote))\n\nIf you are interested in sponsoring a day or more of my time, please\n[get in touch][].\n\n[get in touch]: http://felixge.de/#consulting\n\n## Community\n\nIf you\'d like to discuss this module, or ask questions about it, please use one\nof the following:\n\n* **Mailing list**: https://groups.google.com/forum/#!forum/node-mysql\n* **IRC Channel**: #node.js (on freenode.net, I pay attention to any message\n  including the term `mysql`)\n\n## Establishing connections\n\nThe recommended way to establish a connection is this:\n\n```js\nvar mysql      = require(\'mysql\');\nvar connection = mysql.createConnection({\n  host     : \'example.org\',\n  user     : \'bob\',\n  password : \'secret\'\n});\n\nconnection.connect(function(err) {\n  // connected! (unless `err` is set)\n});\n```\n\nHowever, a connection can also be implicitly established by invoking a query:\n\n```js\nvar mysql      = require(\'mysql\');\nvar connection = mysql.createConnection(...);\n\nconnection.query(\'SELECT 1\', function(err, rows) {\n  // connected! (unless `err` is set)\n});\n```\n\nDepending on how you like to handle your errors, either method may be\nappropriate. Any type of connection error (handshake or network) is considered\na fatal error, see the [Error Handling](#error-handling) section for more\ninformation.\n\n## Connection options\n\nWhen establishing a connection, you can set the following options:\n\n* `host`: The hostname of the database you are connecting to. (Default:\n  `localhost`)\n* `port`: The port number to connect to. (Default: `3306`)\n* `localAddress`: The source IP address to use for TCP connection. (Optional)\n* `socketPath`: The path to a unix domain socket to connect to. When used `host`\n  and `port` are ignored.\n* `user`: The MySQL user to authenticate as.\n* `password`: The password of that MySQL user.\n* `database`: Name of the database to use for this connection (Optional).\n* `charset`: The charset for the connection. (Default: `\'UTF8_GENERAL_CI\'`. Value needs to be all in upper case letters!)\n* `timezone`: The timezone used to store local dates. (Default: `\'local\'`)\n* `connectTimeout`: The milliseconds before a timeout occurs during the initial connection\n  to the MySQL server. (Default: no timeout)\n* `stringifyObjects`: Stringify objects instead of converting to values. See\nissue [#501](https://github.com/felixge/node-mysql/issues/501). (Default: `\'false\'`)\n* `insecureAuth`: Allow connecting to MySQL instances that ask for the old\n  (insecure) authentication method. (Default: `false`)\n* `typeCast`: Determines if column values should be converted to native\n   JavaScript types. (Default: `true`)\n* `queryFormat`: A custom query format function. See [Custom format](#custom-format).\n* `supportBigNumbers`: When dealing with big numbers (BIGINT and DECIMAL columns) in the database,\n  you should enable this option (Default: `false`).\n* `bigNumberStrings`: Enabling both `supportBigNumbers` and `bigNumberStrings` forces big numbers\n  (BIGINT and DECIMAL columns) to be always returned as JavaScript String objects (Default: `false`).\n  Enabling `supportBigNumbers` but leaving `bigNumberStrings` disabled will return big numbers as String\n  objects only when they cannot be accurately represented with [JavaScript Number objects] (http://ecma262-5.com/ELS5_HTML.htm#Section_8.5)\n  (which happens when they exceed the [-2^53, +2^53] range), otherwise they will be returned as\n  Number objects. This option is ignored if `supportBigNumbers` is disabled.\n* `dateStrings`: Force date types (TIMESTAMP, DATETIME, DATE) to be returned as strings rather then\n   inflated into JavaScript Date objects. (Default: `false`)\n* `debug`: Prints protocol details to stdout. (Default: `false`)\n* `trace`: Generates stack traces on `Error` to include call site of library\n   entrance ("long stack traces"). Slight performance penalty for most calls.\n   (Default: `true`)\n* `multipleStatements`: Allow multiple mysql statements per query. Be careful\n  with this, it exposes you to SQL injection attacks. (Default: `false`)\n* `flags`: List of connection flags to use other than the default ones. It is\n  also possible to blacklist default ones. For more information, check [Connection Flags](#connection-flags).\n* `ssl`: object with ssl parameters ( same format as [crypto.createCredentials](http://nodejs.org/api/crypto.html#crypto_crypto_createcredentials_details) argument ) \n  or a string containing name of ssl profile. Currently only \'Amazon RDS\' profile is bundled, containing CA from https://rds.amazonaws.com/doc/rds-ssl-ca-cert.pem\n\n\nIn addition to passing these options as an object, you can also use a url\nstring. For example:\n\n```js\nvar connection = mysql.createConnection(\'mysql://user:pass@host/db?debug=true&charset=BIG5_CHINESE_CI&timezone=-0700\');\n```\n\nNote: The query values are first attempted to be parsed as JSON, and if that\nfails assumed to be plaintext strings.\n\n## Terminating connections\n\nThere are two ways to end a connection. Terminating a connection gracefully is\ndone by calling the `end()` method:\n\n```js\nconnection.end(function(err) {\n  // The connection is terminated now\n});\n```\n\nThis will make sure all previously enqueued queries are still before sending a\n`COM_QUIT` packet to the MySQL server. If a fatal error occurs before the\n`COM_QUIT` packet can be sent, an `err` argument will be provided to the\ncallback, but the connection will be terminated regardless of that.\n\nAn alternative way to end the connection is to call the `destroy()` method.\nThis will cause an immediate termination of the underlying socket.\nAdditionally `destroy()` guarantees that no more events or callbacks will be\ntriggered for the connection.\n\n```js\nconnection.destroy();\n```\n\nUnlike `end()` the `destroy()` method does not take a callback argument.\n\n## Pooling connections\n\nUse pool directly.\n```js\nvar mysql = require(\'mysql\');\nvar pool  = mysql.createPool({\n  host     : \'example.org\',\n  user     : \'bob\',\n  password : \'secret\'\n});\n\npool.query(\'SELECT 1 + 1 AS solution\', function(err, rows, fields) {\n  if (err) throw err;\n\n  console.log(\'The solution is: \', rows[0].solution);\n});\n```\n\nConnections can be pooled to ease sharing a single connection, or managing\nmultiple connections.\n\n```js\nvar mysql = require(\'mysql\');\nvar pool  = mysql.createPool({\n  host     : \'example.org\',\n  user     : \'bob\',\n  password : \'secret\'\n});\n\npool.getConnection(function(err, connection) {\n  // connected! (unless `err` is set)\n});\n```\n\nIf you need to set session variables on the connection before it gets used,\nyou can listen to the `connection` event.\n\n```js\npool.on(\'connection\', function(connection) {\n  connection.query(\'SET SESSION auto_increment_increment=1\')\n});\n```\n\nWhen you are done with a connection, just call `connection.release()` and the\nconnection will return to the pool, ready to be used again by someone else.\n\n```js\nvar mysql = require(\'mysql\');\nvar pool  = mysql.createPool(...);\n\npool.getConnection(function(err, connection) {\n  // Use the connection\n  connection.query( \'SELECT something FROM sometable\', function(err, rows) {\n    // And done with the connection.\n    connection.release();\n\n    // Don\'t use the connection here, it has been returned to the pool.\n  });\n});\n```\n\nIf you would like to close the connection and remove it from the pool, use\n`connection.destroy()` instead. The pool will create a new connection the next\ntime one is needed.\n\nConnections are lazily created by the pool. If you configure the pool to allow\nup to 100 connections, but only ever use 5 simultaneously, only 5 connections\nwill be made. Connections are also cycled round-robin style, with connections\nbeing taken from the top of the pool and returning to the bottom.\n\n## Pool options\n\nPools accept all the same options as a connection. When creating a new\nconnection, the options are simply passed to the connection constructor. In\naddition to those options pools accept a few extras:\n\n* `waitForConnections`: Determines the pool\'s action when no connections are\n  available and the limit has been reached. If `true`, the pool will queue the\n  connection request and call it when one becomes available. If `false`, the\n  pool will immediately call back with an error. (Default: `true`)\n* `connectionLimit`: The maximum number of connections to create at once.\n  (Default: `10`)\n* `queueLimit`: The maximum number of connection requests the pool will queue\n  before returning an error from `getConnection`. If set to `0`, there is no\n  limit to the number of queued connection requests. (Default: `0`)\n\n## PoolCluster\n\nPoolCluster provides multiple hosts connection. (group & retry & selector)\n\n```js\n// create\nvar poolCluster = mysql.createPoolCluster();\n\npoolCluster.add(config); // anonymous group\npoolCluster.add(\'MASTER\', masterConfig);\npoolCluster.add(\'SLAVE1\', slave1Config);\npoolCluster.add(\'SLAVE2\', slave2Config);\n\n// Target Group : ALL(anonymous, MASTER, SLAVE1-2), Selector : round-robin(default)\npoolCluster.getConnection(function (err, connection) {});\n\n// Target Group : MASTER, Selector : round-robin\npoolCluster.getConnection(\'MASTER\', function (err, connection) {});\n\n// Target Group : SLAVE1-2, Selector : order\n// If can\'t connect to SLAVE1, return SLAVE2. (remove SLAVE1 in the cluster)\npoolCluster.on(\'remove\', function (nodeId) {\n  console.log(\'REMOVED NODE : \' + nodeId); // nodeId = SLAVE1 \n});\n\npoolCluster.getConnection(\'SLAVE*\', \'ORDER\', function (err, connection) {});\n\n// of namespace : of(pattern, selector)\npoolCluster.of(\'*\').getConnection(function (err, connection) {});\n\nvar pool = poolCluster.of(\'SLAVE*\', \'RANDOM\');\npool.getConnection(function (err, connection) {});\npool.getConnection(function (err, connection) {});\n\n// destroy\npoolCluster.end();\n```\n\n## PoolCluster Option\n* `canRetry`: If `true`, `PoolCluster` will attempt to reconnect when connection fails. (Default: `true`)\n* `removeNodeErrorCount`: If connection fails, node\'s `errorCount` increases. \n  When `errorCount` is greater than `removeNodeErrorCount`, remove a node in the `PoolCluster`. (Default: `5`)\n* `defaultSelector`: The default selector. (Default: `RR`)\n  * `RR`: Select one alternately. (Round-Robin)\n  * `RANDOM`: Select the node by random function.\n  * `ORDER`: Select the first node available unconditionally.\n\n```js\nvar clusterConfig = {\n  removeNodeErrorCount: 1, // Remove the node immediately when connection fails.\n  defaultSelector: \'ORDER\'\n};\n\nvar poolCluster = mysql.createPoolCluster(clusterConfig);\n```\n\n## Switching users / altering connection state\n\nMySQL offers a changeUser command that allows you to alter the current user and\nother aspects of the connection without shutting down the underlying socket:\n\n```js\nconnection.changeUser({user : \'john\'}, function(err) {\n  if (err) throw err;\n});\n```\n\nThe available options for this feature are:\n\n* `user`: The name of the new user (defaults to the previous one).\n* `password`: The password of the new user (defaults to the previous one).\n* `charset`: The new charset (defaults to the previous one).\n* `database`: The new database (defaults to the previous one).\n\nA sometimes useful side effect of this functionality is that this function also\nresets any connection state (variables, transactions, etc.).\n\nErrors encountered during this operation are treated as fatal connection errors\nby this module.\n\n## Server disconnects\n\nYou may lose the connection to a MySQL server due to network problems, the\nserver timing you out, the server being restarted, or crashing. All of these\nevents are considered fatal errors, and will have the `err.code =\n\'PROTOCOL_CONNECTION_LOST\'`.  See the [Error Handling](#error-handling) section\nfor more information.\n\nA good way to handle such unexpected disconnects is shown below:\n\n```js\nvar db_config = {\n  host: \'localhost\',\n\tuser: \'root\',\n\tpassword: \'\',\n\tdatabase: \'example\'\n};\n\nvar connection;\n\nfunction handleDisconnect() {\n  connection = mysql.createConnection(db_config); // Recreate the connection, since\n                                                  // the old one cannot be reused.\n\n  connection.connect(function(err) {              // The server is either down\n    if(err) {                                     // or restarting (takes a while sometimes).\n      console.log(\'error when connecting to db:\', err);\n      setTimeout(handleDisconnect, 2000); // We introduce a delay before attempting to reconnect,\n    }                                     // to avoid a hot loop, and to allow our node script to\n  });                                     // process asynchronous requests in the meantime.\n                                          // If you\'re also serving http, display a 503 error.\n  connection.on(\'error\', function(err) {\n    console.log(\'db error\', err);\n    if(err.code === \'PROTOCOL_CONNECTION_LOST\') { // Connection to the MySQL server is usually\n      handleDisconnect();                         // lost due to either server restart, or a\n    } else {                                      // connnection idle timeout (the wait_timeout\n      throw err;                                  // server variable configures this)\n    }\n  });\n}\n\nhandleDisconnect();\n```\n\nAs you can see in the example above, re-connecting a connection is done by\nestablishing a new connection. Once terminated, an existing connection object\ncannot be re-connected by design.\n\nWith Pool, disconnected connections will be removed from the pool freeing up\nspace for a new connection to be created on the next getConnection call.\n\n## Escaping query values\n\nIn order to avoid SQL Injection attacks, you should always escape any user\nprovided data before using it inside a SQL query. You can do so using the\n`connection.escape()` or `pool.escape()` methods:\n\n```js\nvar userId = \'some user provided value\';\nvar sql    = \'SELECT * FROM users WHERE id = \' + connection.escape(userId);\nconnection.query(sql, function(err, results) {\n  // ...\n});\n```\n\nAlternatively, you can use `?` characters as placeholders for values you would\nlike to have escaped like this:\n\n```js\nconnection.query(\'SELECT * FROM users WHERE id = ?\', [userId], function(err, results) {\n  // ...\n});\n```\n\nThis looks similar to prepared statements in MySQL, however it really just uses\nthe same `connection.escape()` method internally.\n\nDifferent value types are escaped differently, here is how:\n\n* Numbers are left untouched\n* Booleans are converted to `true` / `false` strings\n* Date objects are converted to `\'YYYY-mm-dd HH:ii:ss\'` strings\n* Buffers are converted to hex strings, e.g. `X\'0fa5\'`\n* Strings are safely escaped\n* Arrays are turned into list, e.g. `[\'a\', \'b\']` turns into `\'a\', \'b\'`\n* Nested arrays are turned into grouped lists (for bulk inserts), e.g. `[[\'a\',\n  \'b\'], [\'c\', \'d\']]` turns into `(\'a\', \'b\'), (\'c\', \'d\')`\n* Objects are turned into `key = \'val\'` pairs. Nested objects are cast to\n  strings.\n* `undefined` / `null` are converted to `NULL`\n* `NaN` / `Infinity` are left as-is. MySQL does not support these, and trying\n  to insert them as values will trigger MySQL errors until they implement\n  support.\n\nIf you paid attention, you may have noticed that this escaping allows you\nto do neat things like this:\n\n```js\nvar post  = {id: 1, title: \'Hello MySQL\'};\nvar query = connection.query(\'INSERT INTO posts SET ?\', post, function(err, result) {\n  // Neat!\n});\nconsole.log(query.sql); // INSERT INTO posts SET `id` = 1, `title` = \'Hello MySQL\'\n\n```\n\nIf you feel the need to escape queries by yourself, you can also use the escaping\nfunction directly:\n\n```js\nvar query = "SELECT * FROM posts WHERE title=" + mysql.escape("Hello MySQL");\n\nconsole.log(query); // SELECT * FROM posts WHERE title=\'Hello MySQL\'\n```\n\n## Escaping query identifiers\n\nIf you can\'t trust an SQL identifier (database / table / column name) because it is\nprovided by a user, you should escape it with `mysql.escapeId(identifier)` like this:\n\n```js\nvar sorter = \'date\';\nvar query = \'SELECT * FROM posts ORDER BY \' + mysql.escapeId(sorter);\n\nconsole.log(query); // SELECT * FROM posts ORDER BY `date`\n```\n\nIt also supports adding qualified identifiers. It will escape both parts.\n\n```js\nvar sorter = \'date\';\nvar query = \'SELECT * FROM posts ORDER BY \' + mysql.escapeId(\'posts.\' + sorter);\n\nconsole.log(query); // SELECT * FROM posts ORDER BY `posts`.`date`\n```\n\nAlternatively, you can use `??` characters as placeholders for identifiers you would\nlike to have escaped like this:\n\n```js\nvar userId = 1;\nvar columns = [\'username\', \'email\'];\nvar query = connection.query(\'SELECT ?? FROM ?? WHERE id = ?\', [columns, \'users\', userId], function(err, results) {\n  // ...\n});\n\nconsole.log(query.sql); // SELECT `username`, `email` FROM `users` WHERE id = 1\n```\n**Please note that this last character sequence is experimental and syntax might change**\n\nWhen you pass an Object to `.escape()` or `.query()`, `.escapeId()` is used to avoid SQL injection in object keys.\n\n### Preparing Queries\n\nYou can use mysql.format to prepare a query with multiple insertion points, utilizing the proper escaping for ids and values. A simple example of this follows:\n\n```js\nvar sql = "SELECT * FROM ?? WHERE ?? = ?";\nvar inserts = [\'users\', \'id\', userId];\nsql = mysql.format(sql, inserts);\n```\n\nFollowing this you then have a valid, escaped query that you can then send to the database safely. This is useful if you are looking to prepare the query before actually sending it to the database. As mysql.format is exposed from SqlString.format you also have the option (but are not required) to pass in stringifyObject and timezone, allowing you provide a custom means of turning objects into strings, as well as a location-specific/timezone-aware Date.\n\n### Custom format\n\nIf you prefer to have another type of query escape format, there\'s a connection configuration option you can use to define a custom format function. You can access the connection object if you want to use the built-in `.escape()` or any other connection function.\n\nHere\'s an example of how to implement another format:\n\n```js\nconnection.config.queryFormat = function (query, values) {\n  if (!values) return query;\n  return query.replace(/\\:(\\w+)/g, function (txt, key) {\n    if (values.hasOwnProperty(key)) {\n      return this.escape(values[key]);\n    }\n    return txt;\n  }.bind(this));\n};\n\nconnection.query("UPDATE posts SET title = :title", { title: "Hello MySQL" });\n```\n\n## Getting the id of an inserted row\n\nIf you are inserting a row into a table with an auto increment primary key, you\ncan retrieve the insert id like this:\n\n```js\nconnection.query(\'INSERT INTO posts SET ?\', {title: \'test\'}, function(err, result) {\n  if (err) throw err;\n\n  console.log(result.insertId);\n});\n```\n\nWhen dealing with big numbers (above JavaScript Number precision limit), you should\nconsider enabling `supportBigNumbers` option to be able to read the insert id as a\nstring, otherwise it will throw.\n\nThis option is also required when fetching big numbers from the database, otherwise\nyou will get values rounded to hundreds or thousands due to the precision limit.\n\n## Executing queries in parallel\n\nThe MySQL protocol is sequential, this means that you need multiple connections\nto execute queries in parallel. You can use a Pool to manage connections, one\nsimple approach is to create one connection per incoming http request.\n\n## Streaming query rows\n\nSometimes you may want to select large quantities of rows and process each of\nthem as they are received. This can be done like this:\n\n```js\nvar query = connection.query(\'SELECT * FROM posts\');\nquery\n  .on(\'error\', function(err) {\n    // Handle error, an \'end\' event will be emitted after this as well\n  })\n  .on(\'fields\', function(fields) {\n    // the field packets for the rows to follow\n  })\n  .on(\'result\', function(row) {\n    // Pausing the connnection is useful if your processing involves I/O\n    connection.pause();\n\n    processRow(row, function() {\n      connection.resume();\n    });\n  })\n  .on(\'end\', function() {\n    // all rows have been received\n  });\n```\n\nPlease note a few things about the example above:\n\n* Usually you will want to receive a certain amount of rows before starting to\n  throttle the connection using `pause()`. This number will depend on the\n  amount and size of your rows.\n* `pause()` / `resume()` operate on the underlying socket and parser. You are\n  guaranteed that no more `\'result\'` events will fire after calling `pause()`.\n* You MUST NOT provide a callback to the `query()` method when streaming rows.\n* The `\'result\'` event will fire for both rows as well as OK packets\n  confirming the success of a INSERT/UPDATE query.\n\nAdditionally you may be interested to know that it is currently not possible to\nstream individual row columns, they will always be buffered up entirely. If you\nhave a good use case for streaming large fields to and from MySQL, I\'d love to\nget your thoughts and contributions on this.\n\n### Piping results with [Streams2](http://blog.nodejs.org/2012/12/20/streams2/)\n\nThe query object provides a convenience method `.stream([options])` that wraps\nquery events into a [Readable](http://nodejs.org/api/stream.html#stream_class_stream_readable)\nStreams2 object.  This stream can easily be piped downstream and provides\nautomatic pause/resume, based on downstream congestion and the optional\n`highWaterMark`. The `objectMode` parameter of the stream is set to `true` by\ndefault.\n\nFor example, piping query results into another stream (with a max buffer of 5\nobjects) is simply:\n\n```js\nconnection.query(\'SELECT * FROM posts\')\n  .stream({highWaterMark: 5})\n  .pipe(...);\n```\n\n## Multiple statement queries\n\nSupport for multiple statements is disabled for security reasons (it allows for\nSQL injection attacks if values are not properly escaped). To use this feature\nyou have to enable it for your connection:\n\n```js\nvar connection = mysql.createConnection({multipleStatements: true});\n```\n\nOnce enabled, you can execute multiple statement queries like any other query:\n\n```js\nconnection.query(\'SELECT 1; SELECT 2\', function(err, results) {\n  if (err) throw err;\n\n  // `results` is an array with one element for every statement in the query:\n  console.log(results[0]); // [{1: 1}]\n  console.log(results[1]); // [{2: 2}]\n});\n```\n\nAdditionally you can also stream the results of multiple statement queries:\n\n```js\nvar query = connection.query(\'SELECT 1; SELECT 2\');\n\nquery\n  .on(\'fields\', function(fields, index) {\n    // the fields for the result rows that follow\n  })\n  .on(\'result\', function(row, index) {\n    // index refers to the statement this result belongs to (starts at 0)\n  });\n```\n\nIf one of the statements in your query causes an error, the resulting Error\nobject contains a `err.index` property which tells you which statement caused\nit. MySQL will also stop executing any remaining statements when an error\noccurs.\n\nPlease note that the interface for streaming multiple statement queries is\nexperimental and I am looking forward to feedback on it.\n\n## Stored procedures\n\nYou can call stored procedures from your queries as with any other mysql driver.\nIf the stored procedure produces several result sets, they are exposed to you\nthe same way as the results for multiple statement queries.\n\n## Joins with overlapping column names\n\nWhen executing joins, you are likely to get result sets with overlapping column\nnames.\n\nBy default, node-mysql will overwrite colliding column names in the\norder the columns are received from MySQL, causing some of the received values\nto be unavailable.\n\nHowever, you can also specify that you want your columns to be nested below\nthe table name like this:\n\n```js\nvar options = {sql: \'...\', nestTables: true};\nconnection.query(options, function(err, results) {\n  /* results will be an array like this now:\n  [{\n    table1: {\n      fieldA: \'...\',\n      fieldB: \'...\',\n    },\n    table2: {\n      fieldA: \'...\',\n      fieldB: \'...\',\n    },\n  }, ...]\n  */\n});\n```\n\nOr use a string separator to have your results merged.\n\n```js\nvar options = {sql: \'...\', nestTables: \'_\'};\nconnection.query(options, function(err, results) {\n  /* results will be an array like this now:\n  [{\n    table1_fieldA: \'...\',\n    table1_fieldB: \'...\',\n    table2_fieldA: \'...\',\n    table2_fieldB: \'...\',\n  }, ...]\n  */\n});\n```\n\n## Transactions\n\nSimple transaction support is available at the connection level:\n\n```js\nconnection.beginTransaction(function(err) {\n  if (err) { throw err; }\n  connection.query(\'INSERT INTO posts SET title=?\', title, function(err, result) {\n    if (err) { \n      connection.rollback(function() {\n        throw err;\n      });\n    }\n\n\tvar log = \'Post \' + result.insertId + \' added\';\n\n\tconnection.query(\'INSERT INTO log SET data=?\', log, function(err, result) {\n\t  if (err) { \n        connection.rollback(function() {\n          throw err;\n        });\n      }  \n\t  connection.commit(function(err) {\n\t    if (err) { \n          connection.rollback(function() {\n            throw err;\n          });\n        }\n\t    console.log(\'success!\');\n\t  });\n    });\n  });\n});\n```\nPlease note that beginTransaction(), commit() and rollback() are simply convenience\nfunctions that execute the START TRANSACTION, COMMIT, and ROLLBACK commands respectively.\nIt is important to understand that many commands in MySQL can cause an implicit commit,\nas described [in the MySQL documentation](http://dev.mysql.com/doc/refman/5.5/en/implicit-commit.html)\n\n## Error handling\n\nThis module comes with a consistent approach to error handling that you should\nreview carefully in order to write solid applications.\n\nAll errors created by this module are instances of the JavaScript [Error][]\nobject. Additionally they come with two properties:\n\n* `err.code`: Either a [MySQL server error][] (e.g.\n  `\'ER_ACCESS_DENIED_ERROR\'`), a node.js error (e.g. `\'ECONNREFUSED\'`) or an\n  internal error (e.g.  `\'PROTOCOL_CONNECTION_LOST\'`).\n* `err.fatal`: Boolean, indicating if this error is terminal to the connection\n  object.\n\n[Error]: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n[MySQL server error]: http://dev.mysql.com/doc/refman/5.5/en/error-messages-server.html\n\nFatal errors are propagated to *all* pending callbacks. In the example below, a\nfatal error is triggered by trying to connect to an invalid port. Therefore the\nerror object is propagated to both pending callbacks:\n\n```js\nvar connection = require(\'mysql\').createConnection({\n  port: 84943, // WRONG PORT\n});\n\nconnection.connect(function(err) {\n  console.log(err.code); // \'ECONNREFUSED\'\n  console.log(err.fatal); // true\n});\n\nconnection.query(\'SELECT 1\', function(err) {\n  console.log(err.code); // \'ECONNREFUSED\'\n  console.log(err.fatal); // true\n});\n```\n\nNormal errors however are only delegated to the callback they belong to.  So in\nthe example below, only the first callback receives an error, the second query\nworks as expected:\n\n```js\nconnection.query(\'USE name_of_db_that_does_not_exist\', function(err, rows) {\n  console.log(err.code); // \'ER_BAD_DB_ERROR\'\n});\n\nconnection.query(\'SELECT 1\', function(err, rows) {\n  console.log(err); // null\n  console.log(rows.length); // 1\n});\n```\n\nLast but not least: If a fatal errors occurs and there are no pending\ncallbacks, or a normal error occurs which has no callback belonging to it, the\nerror is emitted as an `\'error\'` event on the connection object. This is\ndemonstrated in the example below:\n\n```js\nconnection.on(\'error\', function(err) {\n  console.log(err.code); // \'ER_BAD_DB_ERROR\'\n});\n\nconnection.query(\'USE name_of_db_that_does_not_exist\');\n```\n\nNote: `\'error\'` are special in node. If they occur without an attached\nlistener, a stack trace is printed and your process is killed.\n\n**tl;dr:** This module does not want you to deal with silent failures. You\nshould always provide callbacks to your method calls. If you want to ignore\nthis advice and suppress unhandled errors, you can do this:\n\n```js\n// I am Chuck Norris:\nconnection.on(\'error\', function() {});\n```\n\n## Exception Safety\n\nThis module is exception safe. That means you can continue to use it, even if\none of your callback functions throws an error which you\'re catching using\n\'uncaughtException\' or a domain.\n\n## Type casting\n\nFor your convenience, this driver will cast mysql types into native JavaScript\ntypes by default. The following mappings exist:\n\n### Number\n\n* TINYINT\n* SMALLINT\n* INT\n* MEDIUMINT\n* YEAR\n* FLOAT\n* DOUBLE\n\n### Date\n\n* TIMESTAMP\n* DATE\n* DATETIME\n\n### Buffer\n\n* TINYBLOB\n* MEDIUMBLOB\n* LONGBLOB\n* BLOB\n* BINARY\n* VARBINARY\n* BIT (last byte will be filled with 0 bits as necessary)\n\n### String\n\n* CHAR\n* VARCHAR\n* TINYTEXT\n* MEDIUMTEXT\n* LONGTEXT\n* TEXT\n* ENUM\n* SET\n* DECIMAL (may exceed float precision)\n* BIGINT (may exceed float precision)\n* TIME (could be mapped to Date, but what date would be set?)\n* GEOMETRY (never used those, get in touch if you do)\n\nIt is not recommended (and may go away / change in the future) to disable type\ncasting, but you can currently do so on either the connection:\n\n```js\nvar connection = require(\'mysql\').createConnection({typeCast: false});\n```\n\nOr on the query level:\n\n```js\nvar options = {sql: \'...\', typeCast: false};\nvar query = connection.query(options, function(err, results) {\n\n});\n```\n\nYou can also pass a function and handle type casting yourself. You\'re given some\ncolumn information like database, table and name and also type and length. If you\njust want to apply a custom type casting to a specific type you can do it and then\nfallback to the default. Here\'s an example of converting `TINYINT(1)` to boolean:\n\n```js\nconnection.query({\n  sql: \'...\',\n  typeCast: function (field, next) {\n    if (field.type == \'TINY\' && field.length == 1) {\n      return (field.string() == \'1\'); // 1 = true, 0 = false\n    }\n    return next();\n  }\n});\n```\n__WARNING: YOU MUST INVOKE the parser using one of these three field functions in your custom typeCast callback. They can only be called once.( see #539 for discussion)__\n\n```\nfield.string()\nfield.buffer()\nfield.geometry()\n```\nare aliases for\n```\nparser.parseLengthCodedString()\nparser.parseLengthCodedBuffer()\nparser.parseGeometryValue()\n```\n__You can find which field function you need to use by looking at: [RowDataPacket.prototype._typeCast](https://github.com/felixge/node-mysql/blob/master/lib/protocol/packets/RowDataPacket.js#L41)__\n\n\n## Connection Flags\n\nIf, for any reason, you would like to change the default connection flags, you\ncan use the connection option `flags`. Pass a string with a comma separated list\nof items to add to the default flags. If you don\'t want a default flag to be used\nprepend the flag with a minus sign. To add a flag that is not in the default list, don\'t prepend it with a plus sign, just write the flag name (case insensitive).\n\n**Please note that some available flags that are not default are still not supported\n(e.g.: SSL, Compression). Use at your own risk.**\n\n### Example\n\nThe next example blacklists FOUND_ROWS flag from default connection flags.\n\n```js\nvar connection = mysql.createConnection("mysql://localhost/test?flags=-FOUND_ROWS");\n```\n\n### Default Flags\n\n- LONG_PASSWORD\n- FOUND_ROWS\n- LONG_FLAG\n- CONNECT_WITH_DB\n- ODBC\n- LOCAL_FILES\n- IGNORE_SPACE\n- PROTOCOL_41\n- IGNORE_SIGPIPE\n- TRANSACTIONS\n- RESERVED\n- SECURE_CONNECTION\n- MULTI_RESULTS\n- MULTI_STATEMENTS (used if `multipleStatements` option is activated)\n\n### Other Available Flags\n\n- NO_SCHEMA\n- COMPRESS\n- INTERACTIVE\n- SSL\n- PS_MULTI_RESULTS\n- PLUGIN_AUTH\n- SSL_VERIFY_SERVER_CERT\n- REMEMBER_OPTIONS\n\n## Debugging and reporting problems\n\nIf you are running into problems, one thing that may help is enabling the\n`debug` mode for the connection:\n\n```js\nvar connection = mysql.createConnection({debug: true});\n```\n\nThis will print all incoming and outgoing packets on stdout. You can also restrict debugging to\npacket types by passing an array of types to debug:\n\n```js\nvar connection = mysql.createConnection({debug: [\'ComQueryPacket\', \'RowDataPacket\']});\n```\n\nto restrict debugging to the query and data packets.\n\nIf that does not help, feel free to open a GitHub issue. A good GitHub issue\nwill have:\n\n* The minimal amount of code required to reproduce the problem (if possible)\n* As much debugging output and information about your environment (mysql\n  version, node version, os, etc.) as you can gather.\n\n## Running unit tests\n\nSet the environment variables `MYSQL_DATABASE`, `MYSQL_HOST`, `MYSQL_PORT`, `MYSQL_USER` and `MYSQL_PASSWORD`. (You may want to put these in a `config.sh` file and source it when you run the tests). Then run `make test`.\n\nFor example, if you have an installation of mysql running on localhost:3306 and no password set for the `root` user, run:\n\n```\n  mysql -u root -e "CREATE DATABASE IF NOT EXISTS node_mysql_test"\n  MYSQL_HOST=localhost MYSQL_PORT=3306 MYSQL_DATABASE=node_mysql_test MYSQL_USER=root MYSQL_PASSWORD= make test\n```\n\n## Running unit tests on windows\n\n* Edit the variables in the file ```make.bat```  according to your system and mysql-settings.\n* Make sure the database (e.g. \'test\') you want to use exists and the user you entered has the proper rights to use the test database. (E.g. do not forget to execute the SQL-command ```FLUSH PRIVILEGES``` after you have created the user.)\n* In a DOS-box (or CMD-shell) in the folder of your application run ```npm install mysql --dev``` or in the mysql folder (```node_modules\\mysql```), run ```npm install --dev```. (This will install additional developer-dependencies for node-mysql.)\n* Run ```npm test mysql``` in your applications folder or ```npm test``` in the mysql subfolder.\n* If you want to log the output into a file use ```npm test mysql > test.log``` or ```npm test > test.log```.\n\n## Todo\n\n* Prepared statements\n* setTimeout() for Connection / Query\n* Support for encodings other than UTF-8 / ASCII\n',
939 silly resolved     readmeFilename: 'Readme.md',
939 silly resolved     _id: 'mysql@2.1.1',
939 silly resolved     dist: { shasum: '40e797357175973c4df0395327f34e7d5b491ccd' },
939 silly resolved     _from: 'mysql@*',
939 silly resolved     _resolved: 'https://registry.npmjs.org/mysql/-/mysql-2.1.1.tgz' },
939 silly resolved   { name: 'jsftp',
939 silly resolved     id: 'jsftp',
939 silly resolved     version: '1.2.1',
939 silly resolved     description: 'A sane FTP client implementation for NodeJS',
939 silly resolved     keywords: [ 'ftp', 'protocol', 'files', 'server', 'client', 'async' ],
939 silly resolved     author:
939 silly resolved      { name: 'Sergi Mansilla',
939 silly resolved        email: 'sergi.mansilla@gmail.com',
939 silly resolved        url: 'http://sergimansilla.com' },
939 silly resolved     homepage: 'https://github.com/sergi/jsftp',
939 silly resolved     repository: { type: 'git', url: 'https://github.com/sergi/jsftp.git' },
939 silly resolved     bugs: { url: 'https://github.com/sergi/jsftp/issues' },
939 silly resolved     dependencies:
939 silly resolved      { 'event-stream': '~3.0.14',
939 silly resolved        'ftp-response-parser': '~1.0.0',
939 silly resolved        'parse-listing': '~1.1.0',
939 silly resolved        once: '~1.3.0' },
939 silly resolved     devDependencies:
939 silly resolved      { mocha: '~1.10.0',
939 silly resolved        istanbul: '~0.1.36',
939 silly resolved        'mocha-istanbul': '~0.2.0',
939 silly resolved        sinon: '~1.7.2',
939 silly resolved        'ftp-test-server': '~0.0.1',
939 silly resolved        rimraf: '~2.2.0' },
939 silly resolved     main: './jsftp.js',
939 silly resolved     engines: { node: '>=0.6.21' },
939 silly resolved     scripts: { test: 'mocha -R spec -t 5000', clean: 'rm -rf reports' },
939 silly resolved     licenses: [ [Object] ],
939 silly resolved     readme: 'jsftp <a href="http://flattr.com/thing/1452098/" target="_blank"><img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a>\n=====\n\nA client FTP library for NodeJS that focuses on correctness, clarity\nand conciseness. It doesn\'t get in the way and plays nice with streaming APIs.\n\n[![NPM](https://nodei.co/npm/jsftp.png)](https://nodei.co/npm/jsftp/)\n\n**Warning: The latest version (1.0.0) of jsftp breaks API compatibility with previous\nversions, it is NOT a drop-in replacement. Please be careful when upgrading. The\nAPI changes are not drastic at all and it is all documented below. If you do not\nwant to upgrade yet you should stay with version 0.6.0, the last one before the\nupgrade. The API docs below are updated for 1.0.**\n\nStarting it up\n--------------\n\n```javascript\nvar JSFtp = require("jsftp");\n\nvar Ftp = new JSFtp({\n  host: "myserver.com",\n  port: 3331, // defaults to 21\n  user: "user", // defaults to "anonymous"\n  pass: "1234" // defaults to "@anonymous"\n});\n```\n\njsftp gives you access to all the raw commands of the FTP protocol in form of\nmethods in the `Ftp` object. It also provides several convenience methods for\nactions that require complex chains of commands (e.g. uploading and retrieving\nfiles, passive operations), as shown below.\n\nWhen raw commands succeed they always pass the response of the server to the\ncallback, in the form of an object that contains two properties: `code`, which\nis the response code of the FTP operation, and `text`, which is the complete\ntext of the response.\n\nRaw (or native) commands are accessible in the form `Ftp.raw["command"](params, callback)`\n\nThus, a command like `QUIT` will be called like this:\n\n```javascript\nFtp.raw.quit(function(err, data) {\n    if (err) return console.error(err);\n\n    console.log("Bye!");\n});\n```\n\nand a command like `MKD` (make directory), which accepts parameters, looks like this:\n\n```javascript\nFtp.raw.mkd("/new_dir", function(err, data) {\n    if (err) return console.error(err);\n\n    console.log(data.text); // Show the FTP response text to the user\n    console.log(data.code); // Show the FTP response code to the user\n});\n```\n\nAPI and examples\n----------------\n\n#### new Ftp(options)\n  - `options` is an object with the following properties:\n\n  ```javascript\n  {\n    host: \'localhost\', // Host name for the current FTP server.\n    port: 3333, // Port number for the current FTP server (defaults to 21).\n    user: \'user\', // Username\n    pass: \'pass\', // Password\n  }\n  ```\n\nCreates a new Ftp instance.\n\n\n#### Ftp.host\n\nHost name for the current FTP server.\n\n#### Ftp.port\n\nPort number for the current FTP server (defaults to 21).\n\n#### Ftp.socket\n\nNodeJS socket for the current FTP server.\n\n#### Ftp.features\n\nArray of feature names for the current FTP server. It is\ngenerated when the user authenticates with the `auth` method.\n\n#### Ftp.system\n\nContains the system identification string for the remote FTP server.\n\n\n### Methods\n\n#### Ftp.raw.FTP_COMMAND([params], callback)\nAll the standard FTP commands are available under the `raw` namespace. These\ncommands might accept parameters or not, but they always accept a callback\nwith the signature `err, data`, in which `err` is the error response coming\nfrom the server (usually a 4xx or 5xx error code) and the data is an object\nthat contains two properties: `code` and `text`. `code` is an integer indicating\nthe response code of the response and `text` is the response string itself.\n\n#### Ftp.auth(username, password, callback)\nAuthenticates the user with the given username and password. If null or empty\nvalues are passed for those, `auth` will use anonymous credentials. `callback`\nwill be called with the response text in case of successful login or with an\nerror as a first parameter, in normal Node fashion.\n\n#### Ftp.ls(filePath, callback)\nLists information about files or directories and yields an array of file objects\nwith parsed file properties to the `callback`. You should use this function\ninstead of `stat` or `list` in case you need to do something with the individual\nfile properties.\n\n```javascript\nftp.ls(".", function(err, res) {\n  res.forEach(function(file) {\n    console.log(file.name);\n  });\n});\n```\n\n#### Ftp.list(filePath, callback)\nLists `filePath` contents using a passive connection. Calls callback with an\narray of strings with complete file information.\n\n```javascript\nftp.list(remoteCWD, function(err, res) {\n  res.forEach(function(file) {\n    console.log(file.name);\n  });\n  // Prints something like\n  // -rw-r--r--   1 sergi    staff           4 Jun 03 09:32 testfile1.txt\n  // -rw-r--r--   1 sergi    staff           4 Jun 03 09:31 testfile2.txt\n  // -rw-r--r--   1 sergi    staff           0 May 29 13:05 testfile3.txt\n  // ...\n});\n```\n\n#### Ftp.get(remotePath, callback)\nGives back a paused socket with the file contents ready to be streamed,\nor calls the callback with an error if not successful.\n\n```javascript\n  var str = ""; // Will store the contents of the file\n  ftp.get(\'remote/path/file.txt\', function(err, socket) {\n    if (err) return;\n\n    socket.on("data", function(d) { str += d.toString(); })\n    socket.on("close", function(hadErr) {\n      if (hadErr)\n        console.error(\'There was an error retrieving the file.\');\n    });\n    socket.resume();\n  });\n```\n\n#### Ftp.get(remotePath, localPath, callback)\nStores the remote file directly in the given local path.\n\n```javascript\n  ftp.get(\'remote/file.txt\', \'local/file.txt\', function(hadErr) {\n    if (hadErr)\n      console.error(\'There was an error retrieving the file.\');\n    else\n      console.log(\'File copied successfully!\');\n  });\n```\n\n#### Ftp.put(source, remotePath, callback)\nUploads a file to `filePath`. It accepts a string with the local path for the\nfile or a `Buffer` as a `source` parameter.\n\n```javascript\nftp.put(buffer, \'path/to/remote/file.txt\', function(hadError) {\n  if (!hadError)\n    console.log("File transferred successfully!");\n});\n```\n\n#### Ftp.rename(from, to, callback)\nRenames a file in the server. `from` and `to` are both filepaths.\n\n```javascript\nftp.rename(from, to, function(err, res) {\n  if (!err)\n    console.log("Renaming successful!");\n});\n```\n\n#### Ftp.keepAlive()\nRefreshes the interval thats keep the server connection active.\n\nYou can find more usage examples in the [unit tests](https://github.com/sergi/jsftp/blob/master/test/jsftp_test.js). This documentation\nwill grow as jsftp evolves.\n\nInstallation\n------------\n\n    npm install jsftp\n\nTest coverage\n-------------\n\nIn order to run coverage reports:\n\n    npm install --dev\n    make coverage\n\n    Current overall coverage rate:\n      lines......: 92.1% (316 of 343 lines)\n      functions..: 91.0% (71 of 78 functions)\n\n\nTests\n-----\n\nTo run tests:\n\n    npm install --dev\n    make test\n\nLicense\n-------\n\nSee LICENSE.\n',
939 silly resolved     readmeFilename: 'README.md',
939 silly resolved     _id: 'jsftp@1.2.1',
939 silly resolved     dist: { shasum: 'a3dd1bb693a98a22e6ffd4e98cfa969fc55c55a0' },
939 silly resolved     _from: 'jsftp@1.x',
939 silly resolved     _resolved: 'https://registry.npmjs.org/jsftp/-/jsftp-1.2.1.tgz' } ]
940 info install morestreams@0.1.1 into /home/michael/capstone
941 info install weighted@0.2.2 into /home/michael/capstone
942 info install seq@0.3.5 into /home/michael/capstone
943 info install memorystream@0.2.0 into /home/michael/capstone
944 info install bufferedstream@1.6.0 into /home/michael/capstone
945 info install forever@0.10.11 into /home/michael/capstone
946 info install mysql@2.1.1 into /home/michael/capstone
947 info install jsftp@1.2.1 into /home/michael/capstone
948 info installOne morestreams@0.1.1
949 info installOne weighted@0.2.2
950 info installOne seq@0.3.5
951 info installOne memorystream@0.2.0
952 info installOne bufferedstream@1.6.0
953 info installOne forever@0.10.11
954 info installOne mysql@2.1.1
955 info installOne jsftp@1.2.1
956 verbose from cache /home/michael/.npm/morestreams/0.1.1/package/package.json
957 info /home/michael/capstone/node_modules/morestreams unbuild
958 verbose read json /home/michael/capstone/node_modules/morestreams/package.json
959 verbose from cache /home/michael/.npm/weighted/0.2.2/package/package.json
960 info /home/michael/capstone/node_modules/weighted unbuild
961 verbose read json /home/michael/capstone/node_modules/weighted/package.json
962 verbose from cache /home/michael/.npm/seq/0.3.5/package/package.json
963 info /home/michael/capstone/node_modules/seq unbuild
964 verbose read json /home/michael/capstone/node_modules/seq/package.json
965 verbose from cache /home/michael/.npm/memorystream/0.2.0/package/package.json
966 info /home/michael/capstone/node_modules/memorystream unbuild
967 verbose read json /home/michael/capstone/node_modules/memorystream/package.json
968 verbose from cache /home/michael/.npm/bufferedstream/1.6.0/package/package.json
969 info /home/michael/capstone/node_modules/bufferedstream unbuild
970 verbose read json /home/michael/capstone/node_modules/bufferedstream/package.json
971 verbose from cache /home/michael/.npm/mysql/2.1.1/package/package.json
972 info /home/michael/capstone/node_modules/mysql unbuild
973 verbose read json /home/michael/capstone/node_modules/mysql/package.json
974 verbose from cache /home/michael/.npm/jsftp/1.2.1/package/package.json
975 info /home/michael/capstone/node_modules/jsftp unbuild
976 verbose read json /home/michael/capstone/node_modules/jsftp/package.json
977 verbose from cache /home/michael/.npm/forever/0.10.11/package/package.json
978 info /home/michael/capstone/node_modules/forever unbuild
979 verbose read json /home/michael/capstone/node_modules/forever/package.json
980 verbose tar unpack /home/michael/.npm/morestreams/0.1.1/package.tgz
981 silly lockFile 3f564ae7-apstone-node-modules-morestreams /home/michael/capstone/node_modules/morestreams
982 verbose lock /home/michael/capstone/node_modules/morestreams /home/michael/.npm/3f564ae7-apstone-node-modules-morestreams.lock
983 silly lockFile 52b0e46a-pm-morestreams-0-1-1-package-tgz /home/michael/.npm/morestreams/0.1.1/package.tgz
984 verbose lock /home/michael/.npm/morestreams/0.1.1/package.tgz /home/michael/.npm/52b0e46a-pm-morestreams-0-1-1-package-tgz.lock
985 verbose tar unpack /home/michael/.npm/weighted/0.2.2/package.tgz
986 silly lockFile 0bbb44c5-l-capstone-node-modules-weighted /home/michael/capstone/node_modules/weighted
987 verbose lock /home/michael/capstone/node_modules/weighted /home/michael/.npm/0bbb44c5-l-capstone-node-modules-weighted.lock
988 silly lockFile a1b9d827-l-npm-weighted-0-2-2-package-tgz /home/michael/.npm/weighted/0.2.2/package.tgz
989 verbose lock /home/michael/.npm/weighted/0.2.2/package.tgz /home/michael/.npm/a1b9d827-l-npm-weighted-0-2-2-package-tgz.lock
990 verbose tar unpack /home/michael/.npm/seq/0.3.5/package.tgz
991 silly lockFile 5996e89b-ichael-capstone-node-modules-seq /home/michael/capstone/node_modules/seq
992 verbose lock /home/michael/capstone/node_modules/seq /home/michael/.npm/5996e89b-ichael-capstone-node-modules-seq.lock
993 silly lockFile b2bec23a-ichael-npm-seq-0-3-5-package-tgz /home/michael/.npm/seq/0.3.5/package.tgz
994 verbose lock /home/michael/.npm/seq/0.3.5/package.tgz /home/michael/.npm/b2bec23a-ichael-npm-seq-0-3-5-package-tgz.lock
995 verbose tar unpack /home/michael/.npm/memorystream/0.2.0/package.tgz
996 silly lockFile ed8d220c-pstone-node-modules-memorystream /home/michael/capstone/node_modules/memorystream
997 verbose lock /home/michael/capstone/node_modules/memorystream /home/michael/.npm/ed8d220c-pstone-node-modules-memorystream.lock
998 silly lockFile f868de5a-m-memorystream-0-2-0-package-tgz /home/michael/.npm/memorystream/0.2.0/package.tgz
999 verbose lock /home/michael/.npm/memorystream/0.2.0/package.tgz /home/michael/.npm/f868de5a-m-memorystream-0-2-0-package-tgz.lock
1000 verbose tar unpack /home/michael/.npm/bufferedstream/1.6.0/package.tgz
1001 silly lockFile 2ffde649-tone-node-modules-bufferedstream /home/michael/capstone/node_modules/bufferedstream
1002 verbose lock /home/michael/capstone/node_modules/bufferedstream /home/michael/.npm/2ffde649-tone-node-modules-bufferedstream.lock
1003 silly lockFile 5e11dab1-bufferedstream-1-6-0-package-tgz /home/michael/.npm/bufferedstream/1.6.0/package.tgz
1004 verbose lock /home/michael/.npm/bufferedstream/1.6.0/package.tgz /home/michael/.npm/5e11dab1-bufferedstream-1-6-0-package-tgz.lock
1005 verbose tar unpack /home/michael/.npm/mysql/2.1.1/package.tgz
1006 silly lockFile e5a6c66e-hael-capstone-node-modules-mysql /home/michael/capstone/node_modules/mysql
1007 verbose lock /home/michael/capstone/node_modules/mysql /home/michael/.npm/e5a6c66e-hael-capstone-node-modules-mysql.lock
1008 silly lockFile 1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz /home/michael/.npm/mysql/2.1.1/package.tgz
1009 verbose lock /home/michael/.npm/mysql/2.1.1/package.tgz /home/michael/.npm/1d7e9e1e-hael-npm-mysql-2-1-1-package-tgz.lock
1010 verbose tar unpack /home/michael/.npm/jsftp/1.2.1/package.tgz
1011 silly lockFile faea6c5b-hael-capstone-node-modules-jsftp /home/michael/capstone/node_modules/jsftp
1012 verbose lock /home/michael/capstone/node_modules/jsftp /home/michael/.npm/faea6c5b-hael-capstone-node-modules-jsftp.lock
1013 silly lockFile 60ed838f-hael-npm-jsftp-1-2-1-package-tgz /home/michael/.npm/jsftp/1.2.1/package.tgz
1014 verbose lock /home/michael/.npm/jsftp/1.2.1/package.tgz /home/michael/.npm/60ed838f-hael-npm-jsftp-1-2-1-package-tgz.lock
1015 silly gunzTarPerm modes [ '755', '644' ]
1016 silly gunzTarPerm modes [ '755', '644' ]
1017 silly gunzTarPerm modes [ '755', '644' ]
1018 silly gunzTarPerm modes [ '755', '644' ]
1019 silly gunzTarPerm modes [ '755', '644' ]
1020 silly gunzTarPerm modes [ '755', '644' ]
1021 silly gunzTarPerm modes [ '755', '644' ]
1022 silly gunzTarPerm extractEntry package.json
1023 silly gunzTarPerm extractEntry package.json
1024 silly gunzTarPerm extractEntry package.json
1025 silly gunzTarPerm extractEntry package.json
1026 silly gunzTarPerm extractEntry package.json
1027 silly gunzTarPerm extractEntry package.json
1028 silly gunzTarPerm extractEntry package.json
1029 silly gunzTarPerm extractEntry .npmignore
1030 silly gunzTarPerm extractEntry README.md
1031 silly gunzTarPerm extractEntry main.js
1032 silly gunzTarPerm extractEntry test-upgrade.js
1033 silly gunzTarPerm extractEntry .npmignore
1034 silly gunzTarPerm extractEntry index.js
1035 silly gunzTarPerm extractEntry .npmignore
1036 silly gunzTarPerm extractEntry README.md
1037 silly gunzTarPerm extractEntry .npmignore
1038 silly gunzTarPerm extractEntry README.md
1039 silly gunzTarPerm extractEntry .npmignore
1040 silly gunzTarPerm extractEntry index.js
1041 silly gunzTarPerm extractEntry .npmignore
1042 silly gunzTarPerm extractEntry README.md
1043 silly gunzTarPerm extractEntry tests.js
1044 silly gunzTarPerm extractEntry buffered-stream.js
1045 silly gunzTarPerm extractEntry .travis.yml
1046 silly gunzTarPerm extractEntry index.js
1047 silly gunzTarPerm extractEntry LICENSE.md
1048 silly gunzTarPerm extractEntry README.markdown
1049 silly gunzTarPerm extractEntry LICENSE
1050 silly gunzTarPerm extractEntry index.js
1051 silly gunzTarPerm extractEntry License
1052 silly gunzTarPerm extractEntry Makefile
1053 silly gunzTarPerm extractEntry LICENSE
1054 silly gunzTarPerm extractEntry index.js
1055 info /home/michael/capstone/node_modules/forever unbuild
1056 verbose read json /home/michael/capstone/node_modules/forever/package.json
1057 silly gunzTarPerm extractEntry CHANGES
1058 silly gunzTarPerm extractEntry test/buffered-stream-test.js
1059 silly gunzTarPerm extractEntry bench/weighted.js
1060 silly gunzTarPerm extractEntry lib/weighted.js
1061 silly gunzTarPerm extractEntry examples/join.js
1062 silly gunzTarPerm extractEntry examples/parseq.js
1063 silly gunzTarPerm extractEntry Makefile
1064 silly gunzTarPerm extractEntry test/example.js
1065 silly gunzTarPerm extractEntry Readme.md
1066 silly gunzTarPerm extractEntry .travis.yml
1067 silly gunzTarPerm extractEntry tool/generate-error-constants.js
1068 silly gunzTarPerm extractEntry lib/Connection.js
1069 silly gunzTarPerm extractEntry lib/ConnectionConfig.js
1070 silly gunzTarPerm extractEntry lib/Pool.js
1071 silly gunzTarPerm extractEntry lib/PoolCluster.js
1072 silly gunzTarPerm extractEntry lib/PoolConfig.js
1073 silly gunzTarPerm extractEntry lib/PoolConnection.js
1074 silly gunzTarPerm extractEntry lib/protocol/Auth.js
1075 silly gunzTarPerm extractEntry lib/protocol/PacketHeader.js
1076 silly gunzTarPerm extractEntry lib/protocol/PacketWriter.js
1077 silly gunzTarPerm extractEntry lib/protocol/Parser.js
1078 silly gunzTarPerm extractEntry lib/protocol/Protocol.js
1079 silly gunzTarPerm extractEntry lib/protocol/ResultSet.js
1080 silly gunzTarPerm extractEntry lib/protocol/SqlString.js
1081 silly gunzTarPerm extractEntry lib/protocol/constants/charsets.js
1082 silly gunzTarPerm extractEntry lib/protocol/constants/client.js
1083 silly gunzTarPerm extractEntry lib/protocol/constants/errors.js
1084 silly gunzTarPerm extractEntry lib/protocol/constants/field_flags.js
1085 silly gunzTarPerm extractEntry lib/protocol/constants/server_status.js
1086 silly gunzTarPerm extractEntry lib/protocol/constants/types.js
1087 silly gunzTarPerm extractEntry lib/protocol/packets/ClientAuthenticationPacket.js
1088 silly gunzTarPerm extractEntry lib/protocol/packets/EofPacket.js
1089 silly gunzTarPerm extractEntry lib/protocol/packets/ErrorPacket.js
1090 silly gunzTarPerm extractEntry lib/protocol/packets/Field.js
1091 silly gunzTarPerm extractEntry lib/protocol/packets/EmptyPacket.js
1092 silly gunzTarPerm extractEntry lib/protocol/packets/HandshakeInitializationPacket.js
1093 silly gunzTarPerm extractEntry lib/protocol/packets/LocalDataFilePacket.js
1094 silly gunzTarPerm extractEntry lib/protocol/packets/OkPacket.js
1095 silly gunzTarPerm extractEntry lib/protocol/packets/OldPasswordPacket.js
1096 silly gunzTarPerm extractEntry lib/protocol/packets/ResultSetHeaderPacket.js
1097 silly gunzTarPerm extractEntry lib/protocol/packets/ComStatisticsPacket.js
1098 silly gunzTarPerm extractEntry lib/protocol/packets/RowDataPacket.js
1099 silly gunzTarPerm extractEntry lib/protocol/packets/ComQuitPacket.js
1100 silly gunzTarPerm extractEntry lib/protocol/packets/SSLRequestPacket.js
1101 silly gunzTarPerm extractEntry lib/protocol/packets/ComQueryPacket.js
1102 silly gunzTarPerm extractEntry lib/protocol/packets/StatisticsPacket.js
1103 silly gunzTarPerm extractEntry lib/protocol/packets/ComPingPacket.js
1104 silly gunzTarPerm extractEntry lib/protocol/packets/UseOldPasswordPacket.js
1105 silly gunzTarPerm extractEntry lib/protocol/packets/ComChangeUserPacket.js
1106 silly gunzTarPerm extractEntry lib/protocol/packets/index.js
1107 silly gunzTarPerm extractEntry lib/protocol/packets/FieldPacket.js
1108 silly gunzTarPerm extractEntry lib/protocol/sequences/ChangeUser.js
1109 silly gunzTarPerm extractEntry lib/protocol/sequences/Handshake.js
1110 silly gunzTarPerm extractEntry lib/protocol/sequences/Ping.js
1111 silly gunzTarPerm extractEntry lib/protocol/sequences/Query.js
1112 silly gunzTarPerm extractEntry lib/protocol/sequences/Quit.js
1113 silly gunzTarPerm extractEntry lib/protocol/sequences/Sequence.js
1114 silly gunzTarPerm extractEntry lib/protocol/sequences/Statistics.js
1115 silly gunzTarPerm extractEntry lib/protocol/sequences/index.js
1116 silly gunzTarPerm extractEntry make.bat
1117 silly gunzTarPerm extractEntry Changes.md
1118 silly gunzTarPerm extractEntry fixtures/ssl-profiles.json
1119 silly gunzTarPerm extractEntry test.js
1120 silly gunzTarPerm extractEntry Makefile
1121 silly gunzTarPerm extractEntry lib/jsftp.js
1122 silly gunzTarPerm extractEntry lib/utils.js
1123 silly gunzTarPerm extractEntry lib/lib/jsftp.js
1124 silly gunzTarPerm extractEntry lib/lib/response.js
1125 silly gunzTarPerm extractEntry lib/lib/utils.js
1126 silly gunzTarPerm extractEntry .travis.yml
1127 silly gunzTarPerm extractEntry test/jsftp_test.js
1128 silly gunzTarPerm extractEntry test/mockup_test.js
1129 silly gunzTarPerm extractEntry test/keycert.pem
1130 silly gunzTarPerm extractEntry test/test_c9/testfile.txt
1131 silly gunzTarPerm extractEntry test/tls_ftpd.py
1132 silly gunzTarPerm extractEntry .idea/libraries/Node_js_Dependencies_for_jsftp.xml
1133 silly gunzTarPerm extractEntry .idea/.name
1134 silly gunzTarPerm extractEntry .idea/encodings.xml
1135 silly gunzTarPerm extractEntry .idea/inspectionProfiles/Project_Default.xml
1136 silly gunzTarPerm extractEntry .idea/inspectionProfiles/profiles_settings.xml
1137 silly gunzTarPerm extractEntry .idea/jsLibraryMappings.xml
1138 silly gunzTarPerm extractEntry .idea/jsftp.iml
1139 silly gunzTarPerm extractEntry .idea/codeStyleSettings.xml
1140 silly gunzTarPerm extractEntry .idea/misc.xml
1141 silly gunzTarPerm extractEntry .idea/modules.xml
1142 silly gunzTarPerm extractEntry .idea/scopes/scope_settings.xml
1143 silly gunzTarPerm extractEntry .idea/vcs.xml
1144 silly gunzTarPerm extractEntry .idea/workspace.xml
1145 error error rolling back Error: EPERM, chmod '/home/michael/capstone/node_modules/forever/node_modules/.bin'
1145 error error rolling back  forever@0.10.11 { [Error: EPERM, chmod '/home/michael/capstone/node_modules/forever/node_modules/.bin']
1145 error error rolling back   errno: 50,
1145 error error rolling back   code: 'EPERM',
1145 error error rolling back   path: '/home/michael/capstone/node_modules/forever/node_modules/.bin' }
1146 error Error: EPERM, chmod '/home/michael/capstone/node_modules/forever/node_modules/.bin'
1146 error  { [Error: EPERM, chmod '/home/michael/capstone/node_modules/forever/node_modules/.bin']
1146 error   errno: 50,
1146 error   code: 'EPERM',
1146 error   path: '/home/michael/capstone/node_modules/forever/node_modules/.bin' }
1147 error Please try running this command again as root/Administrator.
1148 error System Linux 3.11.0-12-generic
1149 error command "/usr/bin/nodejs" "/usr/bin/npm" "install"
1150 error cwd /home/michael/capstone
1151 error node -v v0.10.15
1152 error npm -v 1.2.18
1153 error path /home/michael/capstone/node_modules/forever/node_modules/.bin
1154 error code EPERM
1155 error errno 50
1156 error stack Error: EPERM, chmod '/home/michael/capstone/node_modules/forever/node_modules/.bin'
1157 verbose exit [ 50, true ]
